
Database SUBJECTS/malware_via_email/malware_2346/ia32_pe/subject.exe.idb already exists.
Do you want to overwrite it? -> ~L~oad existing

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
   139264    17 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
   925696            total memory allocated

Loading processor module IDADIR/procs/pc.so for metapc...Initializing processor module metapc...OK
Loading type libraries...
Autoanalysis subsystem has been initialized.
Database for file 'subject.exe' has been loaded.
Hex-Rays Decompiler plugin has been loaded (v7.6.0.210427)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.

  Please check the Edit/Plugins menu for more informaton.
=== start of cleanup script -> OK
  function at 00401240       with name '__vbaChkstk'
  function at 00401246       with name '__vbaExceptHandler'
  function at 004012D0       with name 'DllFunctionCall'
  function at 004012D6       with name 'rtcMidCharVar'
  function at 004012DC       with name 'sub_4012DC'
  function at 004012E2       with name 'rtcVarBstrFromAnsi'
  function at 004012E8       with name 'sub_4012E8'
  function at 004012EE       with name '__vbaGenerateBoundsError'
  function at 004012F4       with name '__vbaAryConstruct2'
  function at 004012FA       with name 'rtcAnsiValueBstr'
  function at 00401300       with name '__vbaAryDestruct'
  function at 00401306       with name '__vbaErase'
  function at 0040130C       with name 'sub_40130C'
  function at 00401312       with name 'sub_401312'
  function at 00401318       with name 'sub_401318'
  function at 0040131E       with name 'sub_40131E'
  function at 00401324       with name 'sub_401324'
  function at 0040132A       with name '__vbaFreeVarList'
  function at 00401330       with name 'rtcSplit'
  function at 00401336       with name '__vbaAryVar'
  function at 0040133C       with name 'sub_40133C'
  function at 00401342       with name '__vbaFileClose'
  function at 00401348       with name '__vbaGet3'
  function at 0040134E       with name 'sub_40134E'
  function at 00401354       with name 'rtcSpaceVar'
  function at 0040135A       with name '__vbaStrVarMove'
  function at 00401360       with name 'sub_401360'
  function at 00401366       with name '__vbaFreeObjList'
  function at 00401372       with name '__vbaHresultCheckObj'
  function at 00401378       with name 'sub_401378'
  function at 0040137E       with name 'sub_40137E'
  function at 00401384       with name 'sub_401384'
  function at 0040138A       with name '__vbaFreeVar'
  function at 00401390       with name 'sub_401390'
  function at 00401396       with name 'rtcMidCharBstr'
  function at 0040139C       with name 'rtcStrReverse'
  function at 004013A2       with name 'sub_4013A2'
  function at 004013A8       with name 'sub_4013A8'
  function at 004013AE       with name 'sub_4013AE'
  function at 004013B4       with name '__vbaStrCat'
  function at 004013BA       with name 'sub_4013BA'
  function at 004013C0       with name '__vbaLenBstr'
  function at 004013C6       with name 'sub_4013C6'
  function at 004013CC       with name '__vbaRecUniToAnsi'
  function at 004013D2       with name '__vbaVarMove'
  function at 004013D8       with name '__vbaVarZero'
  function at 004013DE       with name '__vbaRedim'
  function at 004013E4       with name '__vbaRecAnsiToUni'
  function at 004013EA       with name 'sub_4013EA'
  function at 004013F0       with name 'sub_4013F0'
  function at 004013F6       with name '__vbaVarVargNofree'
  function at 004013FC       with name 'sub_4013FC'
  function at 00401402       with name 'sub_401402'
  function at 00401408       with name 'sub_401408'
  function at 0040140E       with name '__vbaStrToUnicode'
  function at 00401414       with name '__vbaSetSystemError'
  function at 0040141A       with name 'sub_40141A'
  function at 004014C8       with name 'sub_4014C8'
  function at 00401E34       with name 'sub_401E34'
  function at 00401EDC       with name 'sub_401EDC'
  function at 00401F28       with name 'sub_401F28'
  function at 00401FBC       with name 'sub_401FBC'
  function at 00402024       with name 'sub_402024'
  function at 0040206C       with name 'sub_40206C'
  function at 00402C84       with name 'sub_402C84'
  function at 0040343A       with name 'sub_40343A'
  function at 00403571       with name 'sub_403571'
  function at 00403CB1       with name 'sub_403CB1'
  function at 00403DEE       with name 'sub_403DEE'
  function at 004040F4       with name 'sub_4040F4'
  function at 004043D0       with name 'sub_4043D0'
finished -> OK
TIMESTAMP decompiling 401E34 size=00000019 times=0...
TIMESTAMP decompiling 401EDC size=00000019 times=0...
TIMESTAMP decompiling 401F28 size=00000019 times=0...
TIMESTAMP decompiling 401FBC size=00000019 times=0...
TIMESTAMP decompiling 402024 size=00000019 times=0...
TIMESTAMP decompiling 40206C size=00000019 times=0...
TIMESTAMP decompiling 40343A size=00000137 times=0...
TIMESTAMP decompiling 403571 size=00000740 times=0...
TIMESTAMP decompiling 403CB1 size=0000013D times=0...
TIMESTAMP decompiling 4040F4 size=000002DC times=0...
TIMESTAMP decompiling 403DEE size=00000306 times=0...
TIMESTAMP decompiling 403CB1 size=0000013D times=1;usedcpu 00:00:00 ...int __usercall@<eax>(int@<ebx>, int@<edi>, int@<esi>, int, int, int)
TIMESTAMP decompiling 403571 size=00000740 times=1;usedcpu 00:00:00 ...int __usercall@<eax>(int@<ebx>, int@<edi>, int@<esi>, _DWORD *, _DWORD *, int)
TIMESTAMP decompiling 40343A size=00000137 times=1;usedcpu 00:00:00 ...int __usercall@<eax>(int@<ebx>, int@<edi>, int@<esi>, int, int, int)
TIMESTAMP decompiling 4043D0 size=00002E97 times=0...
The decompiler assumes that the segment '.text' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 402C84 size=000007B6 times=0...
403018: call analysis failed
TIMESTAMP The application has been completely decompiled.
Flushing buffers, please wait...ok
Unloading IDP module IDADIR/procs/pc.so...
