Possible file format: MS-DOS executable (EXE) (IDADIR/loaders/dos.so)
Possible file format: Portable executable for 80386 (PE) (IDADIR/loaders/pe.so)

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
   204800    25 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
   991232            total memory allocated

Loading file 'SUBJECTS/malware_via_email/malware_1447/ia32_pe/subject.exe' into database...
Detected file format: Portable executable for 80386 (PE)
Loading processor module IDADIR/procs/pc.so for metapc...Initializing processor module metapc...OK
Autoanalysis subsystem has been initialized.
  0. Creating a new segment  (00401000-0040E000) ... ... OK
  1. Creating a new segment  (0040E000-0040F000) ... ... OK
Reading imports directory...
Type library 'mssdk_win7' loaded. Applying types...
Types applied to 111 names.
Plan  FLIRT signature: SEH for vc7-14
Marking typical code sequences...
Flushing buffers, please wait...ok
File 'SUBJECTS/malware_via_email/malware_1447/ia32_pe/subject.exe' has been successfully loaded into the database.
Hex-Rays Decompiler plugin has been loaded (v7.5.0.201028)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.
  Please check the Edit/Plugins menu for more informaton.
IDAPython Hex-Rays bindings initialized.
IDA is analysing the input file...
You may start to explore the input file right now.
Using FLIRT signature: SEH for vc7-14
Propagating type information...
Function argument information has been propagated
lumina: applied metadata to 0 functions.
The initial autoanalysis has been finished.
Flushing buffers, please wait...ok
TIMESTAMP decompiling 40468E size=0000002B times=0...
The decompiler did not consider the segment '.text' as read-only
because the segment has the write permission -> OK
The decompiler did not consider the segment '.text' as read-only
because the segment has the write permission
TIMESTAMP decompiling 4046B9 size=0000001B times=0...
TIMESTAMP decompiling 40468E size=0000002B times=1;usedcpu 00:00:00 ...int()
TIMESTAMP decompiling 404724 size=00000011 times=0...
TIMESTAMP decompiling 40489B size=00000019 times=0...
TIMESTAMP decompiling 404958 size=00000035 times=0...
TIMESTAMP decompiling 404B1E size=0000001D times=0...
TIMESTAMP decompiling 404A8A size=00000054 times=0...
TIMESTAMP decompiling 404792 size=00000274 times=0...
TIMESTAMP decompiling 404B3B size=00000017 times=0...
TIMESTAMP decompiling 404B1E size=0000001D times=1;usedcpu 00:00:00 ...int __usercall@<eax>(char a1@<al>, int a2@<ecx>)
TIMESTAMP decompiling 404A8A size=00000054 times=1;usedcpu 00:00:00 ...void __usercall(unsigned int a1@<eax>, int _EDX@<edx>)
TIMESTAMP decompiling 4046D4 size=000000A1 times=0...
TIMESTAMP decompiling 4046B9 size=0000001B times=1;usedcpu 00:00:00 ...int __usercall@<eax>(char a1@<cf>, __int16 a2@<dx>, int a3@<esi>)
TIMESTAMP decompiling 40468E size=0000002B times=2;usedcpu 00:00:00 ...int __usercall@<eax>(int a1@<esi>)
TIMESTAMP decompiling 404792 size=00000274 times=1;usedcpu 00:00:00 ...double __usercall@<st0>(unsigned int a1@<ebx>, int a2@<edi>)
TIMESTAMP decompiling 404B3B size=00000017 times=1;usedcpu 00:00:00 ...void __usercall(unsigned int a1@<ebx>, int a2@<edi>)
404B47: call analysis failed
TIMESTAMP decompiling 40458D size=000000C3 times=0...
TIMESTAMP decompiling 4046D4 size=000000A1 times=1;usedcpu 00:00:00 ...int __userpurge@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, char a4@<bh>, int a5@<edi>, __int16 a6@<si>, char a7@<efl>, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, int a52, int a53, int a54, int a55, int a56, int a57, int a58, int a59, int a60, int a61, int a62, int a63)
TIMESTAMP decompiling 4046B9 size=0000001B times=2;usedcpu 00:00:00 ...int __usercall@<eax>(char a1@<cf>, __int16 a2@<dx>, int a3@<esi>, int a4@<eax>, char a5@<bh>, int a6@<edi>, char a7@<efl>, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, int a52, int a53, int a54, int a55, int a56, int a57, int a58, int a59, int a60, int a61, int a62, int a63)
TIMESTAMP decompiling 40458D size=000000C3 times=1;usedcpu 00:00:00 ...void __usercall(__int16 _DX@<dx>, int a2@<ecx>, int a3@<edi>, int _ESI@<esi>)
TIMESTAMP decompiling 404993 size=0000005D times=0...
4049D9: cannot convert to microcode
TIMESTAMP decompiling 404913 size=0000010B times=0...
TIMESTAMP decompiling 40458D size=000000C3 times=2;usedcpu 00:00:00 ...void __usercall(__int16 _DX@<dx>, int a2@<ecx>, int a3@<edi>, int _ESI@<esi>)
TIMESTAMP The application has been completely decompiled.
Unloading IDP module IDADIR/procs/pc.so...
