Running phase: Unpacking ( some time )
No matching plugins found for 'gc'
Running phase: Initialization ( some time )
Running phase: Providers initialization ( some time )
Running phase: Input binary to LLVM IR decoding ( some time )
Running phase: LLVM ( some time )
Running phase: x86 address spaces optimization ( some time )
Running phase: x87 fpu register analysis ( some time )
Running phase: Main function identification optimization ( some time )
Running phase: Libgcc idioms optimization ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Conditional branch optimization ( some time )
Running phase: Syscalls optimization ( some time )
Running phase: Stack optimization ( some time )
Running phase: Constants optimization ( some time )
unhandled type catched : void () @ 8144fe0
unhandled type catched : void () @ 80f1814
Running phase: Function parameters and returns optimization ( some time )
Running phase: LLVM instruction optimization using RDA ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Simple types recovery optimization ( some time )
Running phase: Disassembly generation ( some time )
Running phase: Assembly mapping instruction removal ( some time )
Running phase: C++ class hierarchy optimization ( some time )
Running phase: Selected functions optimization ( some time )
Running phase: Unreachable functions optimization ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Make all registers local ( some time )
Running phase: Value protection optimization ( some time )
Running phase: LLVM ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Simple types recovery optimization ( some time )
Running phase: Stack pointer operations optimization ( some time )
Running phase: Instruction idioms optimization ( some time )
Running phase: LLVM ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Instruction idioms optimization ( some time )
Running phase: Phi removal ( some time )
Running phase: LLVM ( some time )
Running phase: Value protection optimization ( some time )
Running phase: Generate the current LLVM IR ( some time )
Running phase: Generate the current bitcode ( some time )
Running phase: LLVM IR -> HLL ( some time )
Running phase: initialization ( some time )
 -> loading the input config ( some time )
 -> creating the used HLL writer [c] ( some time )
 -> creating the used alias analysis [simple] ( some time )
 -> creating the used call info obtainer [optim] ( some time )
 -> creating the used evaluator of arithmetical expressions [c] ( some time )
 -> creating the used variable names generator [fruit] ( some time )
 -> creating the used variable renamer [readable] ( some time )
 -> creating the used semantics [libc,gcc-general,win-api] ( some time )
Running phase: conversion of LLVM IR into BIR ( some time )
 -> converting global variables ( some time )
 -> converting function runtime/internal/sys.Ctz64 ( some time )
 -> converting function runtime/internal/atomic.Load ( some time )
 -> converting function runtime/internal/atomic.Loadp ( some time )
 -> converting function runtime/internal/atomic.Xadd64 ( some time )
 -> converting function runtime/internal/atomic.Xchg64 ( some time )
 -> converting function runtime/internal/atomic.Cas ( some time )
 -> converting function runtime/internal/atomic.Casuintptr ( some time )
 -> converting function runtime/internal/atomic.Loaduintptr ( some time )
 -> converting function runtime/internal/atomic.Storeuintptr ( some time )
 -> converting function runtime/internal/atomic.Xadduintptr ( some time )
 -> converting function runtime/internal/atomic.Loadint64 ( some time )
 -> converting function runtime/internal/atomic.Xaddint64 ( some time )
 -> converting function runtime/internal/atomic.Cas64 ( some time )
 -> converting function runtime/internal/atomic.Casp1 ( some time )
 -> converting function runtime/internal/atomic.Xadd ( some time )
 -> converting function runtime/internal/atomic.Xchg ( some time )
 -> converting function runtime/internal/atomic.StorepNoWB ( some time )
 -> converting function runtime/internal/atomic.Store ( some time )
 -> converting function runtime/internal/atomic.Load64 ( some time )
 -> converting function runtime/internal/atomic.Store64 ( some time )
 -> converting function runtime/internal/atomic.Or8 ( some time )
 -> converting function runtime/internal/atomic.And8 ( some time )
 -> converting function runtime.alginit ( some time )
 -> converting function runtime.atomicstorep ( some time )
 -> converting function runtime.casp ( some time )
 -> converting function runtime.cgoIsGoPointer ( some time )
 -> converting function runtime.cgoCheckWriteBarrier ( some time )
 -> converting function runtime.cgoCheckMemmove ( some time )
 -> converting function runtime.cgoCheckTypedBlock ( some time )
 -> converting function runtime.cgoCheckBits ( some time )
 -> converting function runtime.gogetenv ( some time )
 -> converting function runtime.typestring ( some time )
 -> converting function runtime.printany ( some time )
 -> converting function runtime.memhash ( some time )
 -> converting function runtime.(*hmap).newoverflow ( some time )
 -> converting function runtime.makemap ( some time )
 -> converting function runtime.makeBucketArray ( some time )
 -> converting function runtime.hashGrow ( some time )
 -> converting function runtime.growWork ( some time )
 -> converting function runtime.evacuate ( some time )
 -> converting function runtime.mapaccess1_fast32 ( some time )
 -> converting function runtime.mapaccess2_fast32 ( some time )
 -> converting function runtime.mapaccess2_fast64 ( some time )
 -> converting function runtime.mapassign_fast32 ( some time )
 -> converting function runtime.mapassign_fast64 ( some time )
 -> converting function runtime.getitab ( some time )
 -> converting function runtime.additab ( some time )
 -> converting function runtime.itabsinit ( some time )
 -> converting function runtime.panicdottypeE ( some time )
 -> converting function runtime.panicdottypeI ( some time )
 -> converting function runtime.convT2Estring ( some time )
 -> converting function runtime.assertE2I2 ( some time )
 -> converting function runtime.(*lfstack).push ( some time )
 -> converting function runtime.(*lfstack).pop ( some time )
 -> converting function runtime.(*lfstack).empty ( some time )
 -> converting function runtime.lock ( some time )
 -> converting function runtime.unlock ( some time )
 -> converting function runtime.notewakeup ( some time )
 -> converting function runtime.notesleep ( some time )
 -> converting function runtime.notetsleep_internal ( some time )
 -> converting function runtime.notetsleepg ( some time )
 -> converting function runtime.mallocinit ( some time )
 -> converting function runtime.(*mheap).sysAlloc ( some time )
 -> converting function runtime.nextFreeFast ( some time )
 -> converting function runtime.(*mcache).nextFree ( some time )
 -> converting function runtime.mallocgc ( some time )
 -> converting function runtime.newobject ( some time )
 -> converting function runtime.newarray ( some time )
 -> converting function runtime.profilealloc ( some time )
 -> converting function runtime.nextSample ( some time )
 -> converting function runtime.persistentalloc ( some time )
 -> converting function runtime.writebarrierptr_prewrite1 ( some time )
 -> converting function runtime.writebarrierptr ( some time )
 -> converting function runtime.writebarrierptr_prewrite ( some time )
 -> converting function runtime.typedmemmove ( some time )
 -> converting function runtime.reflectcallmove ( some time )
 -> converting function runtime.typedmemclr ( some time )
 -> converting function runtime.memclrHasPointers ( some time )
 -> converting function runtime.(*mheap).mapBits ( some time )
 -> converting function runtime.(*mspan).refillAllocCache ( some time )
 -> converting function runtime.(*mspan).nextFreeIndex ( some time )
 -> converting function runtime.markBitsForAddr ( some time )
 -> converting function runtime.markBits.setMarked ( some time )
 -> converting function runtime.heapBitsForObject ( some time )
 -> converting function runtime.heapBits.setCheckmarked ( some time )
 -> converting function runtime.bulkBarrierPreWrite ( some time )
 -> converting function runtime.bulkBarrierBitmap ( some time )
 -> converting function runtime.heapBitsSetType ( some time )
 -> converting function runtime.heapBitsSetTypeGCProg ( some time )
 -> converting function runtime.progToPointerMask ( some time )
 -> converting function runtime.runGCProg ( some time )
 -> converting function runtime.allocmcache ( some time )
 -> converting function runtime.freemcache ( some time )
 -> converting function runtime.(*mcache).releaseAll ( some time )
 -> converting function runtime.(*mcentral).uncacheSpan ( some time )
 -> converting function runtime.addrspace_free ( some time )
 -> converting function runtime.mmap_fixed ( some time )
 -> converting function runtime.sysAlloc ( some time )
 -> converting function runtime.sysUsed ( some time )
 -> converting function runtime.sysFree ( some time )
 -> converting function runtime.sysFault ( some time )
 -> converting function runtime.sysReserve ( some time )
 -> converting function runtime.sysMap ( some time )
 -> converting function runtime.wakefing ( some time )
 -> converting function runtime.(*fixalloc).alloc ( some time )
 -> converting function runtime.gcinit ( some time )
 -> converting function runtime.readgogc ( some time )
 -> converting function runtime/debug.setGCPercent ( some time )
 -> converting function runtime.setGCPhase ( some time )
 -> converting function runtime.(*gcControllerState).startCycle ( some time )
 -> converting function runtime.(*gcControllerState).revise ( some time )
 -> converting function runtime.(*gcControllerState).endCycle ( some time )
 -> converting function runtime.(*gcControllerState).enlistWorker ( some time )
 -> converting function runtime.(*gcControllerState).findRunnableGCWorker ( some time )
 -> converting function runtime.gcSetTriggerRatio ( some time )
 -> converting function runtime.gcTrigger.test ( some time )
 -> converting function runtime.gcStart ( some time )
 -> converting function runtime.gcMarkDone ( some time )
 -> converting function runtime.gcMarkTermination ( some time )
 -> converting function runtime.gcBgMarkStartWorkers ( some time )
 -> converting function runtime.gcMarkWorkAvailable ( some time )
 -> converting function runtime.gcResetMarkState ( some time )
 -> converting function runtime.clearpools ( some time )
 -> converting function runtime.gchelper ( some time )
 -> converting function runtime.gchelperstart ( some time )
 -> converting function runtime.itoaDiv ( some time )
 -> converting function runtime.fmtNSAsMS ( some time )
 -> converting function runtime.(*mTreap).insert ( some time )
 -> converting function runtime.(*mTreap).removeNode ( some time )
 -> converting function runtime.(*mTreap).remove ( some time )
 -> converting function runtime.(*mTreap).removeSpan ( some time )
 -> converting function runtime.(*mTreap).rotateLeft ( some time )
 -> converting function runtime.(*mTreap).rotateRight ( some time )
 -> converting function runtime.gcMarkRootPrepare ( some time )
 -> converting function runtime.gcMarkRootCheck ( some time )
 -> converting function runtime.markroot ( some time )
 -> converting function runtime.markrootBlock ( some time )
 -> converting function runtime.markrootSpans ( some time )
 -> converting function runtime.gcAssistAlloc ( some time )
 -> converting function runtime.gcWakeAllAssists ( some time )
 -> converting function runtime.gcParkAssist ( some time )
 -> converting function runtime.gcFlushBgCredit ( some time )
 -> converting function runtime.scanstack ( some time )
 -> converting function runtime.gcDrain ( some time )
 -> converting function runtime.scanblock ( some time )
 -> converting function runtime.scanobject ( some time )
 -> converting function runtime.greyobject ( some time )
 -> converting function runtime.gcDumpObject ( some time )
 -> converting function runtime.gcmarknewobject ( some time )
 -> converting function runtime.gcMarkTinyAllocs ( some time )
 -> converting function runtime.gosweepone ( some time )
 -> converting function runtime.(*gcSweepBuf).numBlocks ( some time )
 -> converting function runtime.(*gcSweepBuf).block ( some time )
 -> converting function runtime.(*gcWork).init ( some time )
 -> converting function runtime.(*gcWork).put ( some time )
 -> converting function runtime.(*gcWork).tryGet ( some time )
 -> converting function runtime.(*gcWork).get ( some time )
 -> converting function runtime.(*gcWork).dispose ( some time )
 -> converting function runtime.(*gcWork).balance ( some time )
 -> converting function runtime.(*workbuf).checknonempty ( some time )
 -> converting function runtime.(*workbuf).checkempty ( some time )
 -> converting function runtime.getempty ( some time )
 -> converting function runtime.putempty ( some time )
 -> converting function runtime.putfull ( some time )
 -> converting function runtime.trygetfull ( some time )
 -> converting function runtime.getfull ( some time )
 -> converting function runtime.handoff ( some time )
 -> converting function runtime.prepareFreeWorkbufs ( some time )
 -> converting function runtime.(*mheap).init ( some time )
 -> converting function runtime.(*mheap).setArenaUsed ( some time )
 -> converting function runtime.(*mheap).mapSpans ( some time )
 -> converting function runtime.(*mheap).allocManual ( some time )
 -> converting function runtime.(*mheap).allocSpanLocked ( some time )
 -> converting function runtime.(*mheap).allocLarge ( some time )
 -> converting function runtime.(*mheap).grow ( some time )
 -> converting function runtime.(*mheap).freeManual ( some time )
 -> converting function runtime.(*mheap).freeSpanLocked ( some time )
 -> converting function runtime.(*mSpanList).remove ( some time )
 -> converting function runtime.(*mSpanList).insert ( some time )
 -> converting function runtime.(*mSpanList).takeAll ( some time )
 -> converting function runtime.newBucket ( some time )
 -> converting function runtime.(*bucket).mp ( some time )
 -> converting function runtime.(*bucket).bp ( some time )
 -> converting function runtime.stkbucket ( some time )
 -> converting function runtime.eqslice ( some time )
 -> converting function runtime.mProf_NextCycle ( some time )
 -> converting function runtime.mProf_Flush ( some time )
 -> converting function runtime.mProf_FlushLocked ( some time )
 -> converting function runtime.mProf_Malloc ( some time )
 -> converting function runtime.blockevent ( some time )
 -> converting function runtime.blocksampled ( some time )
 -> converting function runtime.saveblockevent ( some time )
 -> converting function sync.event ( some time )
 -> converting function runtime.tracealloc ( some time )
 -> converting function runtime.flushmcache ( some time )
 -> converting function runtime.mSysStatInc ( some time )
 -> converting function runtime.mSysStatDec ( some time )
 -> converting function runtime.netpollinited ( some time )
 -> converting function runtime.netpollready ( some time )
 -> converting function runtime.netpollunblock ( some time )
 -> converting function runtime.netpoll ( some time )
 -> converting function runtime.futexsleep ( some time )
 -> converting function runtime.futexwakeup ( some time )
 -> converting function runtime.getproccount ( some time )
 -> converting function runtime.newosproc ( some time )
 -> converting function runtime.sysargs ( some time )
 -> converting function runtime.sysauxv ( some time )
 -> converting function runtime.osinit ( some time )
 -> converting function runtime.getRandomData ( some time )
 -> converting function runtime.goenvs ( some time )
 -> converting function runtime.mpreinit ( some time )
 -> converting function runtime.minit ( some time )
 -> converting function runtime.sigprocmask ( some time )
 -> converting function runtime.setsig ( some time )
 -> converting function runtime.setsigstack ( some time )
 -> converting function runtime.getsig ( some time )
 -> converting function runtime.panicCheckMalloc ( some time )
 -> converting function runtime.panicindex ( some time )
 -> converting function runtime.panicslice ( some time )
 -> converting function runtime.panicdivide ( some time )
 -> converting function runtime.deferproc ( some time )
 -> converting function runtime.testdefersizes ( some time )
 -> converting function runtime.newdefer ( some time )
 -> converting function runtime.freedefer ( some time )
 -> converting function runtime.freedeferpanic ( some time )
 -> converting function runtime.freedeferfn ( some time )
 -> converting function runtime.deferreturn ( some time )
 -> converting function runtime.preprintpanics ( some time )
 -> converting function runtime.printpanics ( some time )
 -> converting function runtime.gopanic ( some time )
 -> converting function runtime.getargp ( some time )
 -> converting function runtime.startpanic ( some time )
 -> converting function runtime.dopanic ( some time )
 -> converting function runtime.throw ( some time )
 -> converting function runtime.recordForPanic ( some time )
 -> converting function runtime.printlock ( some time )
 -> converting function runtime.printunlock ( some time )
 -> converting function runtime.gwrite ( some time )
 -> converting function runtime.printsp ( some time )
 -> converting function runtime.printnl ( some time )
 -> converting function runtime.printbool ( some time )
 -> converting function runtime.printfloat ( some time )
 -> converting function runtime.printcomplex ( some time )
 -> converting function runtime.printuint ( some time )
 -> converting function runtime.printint ( some time )
 -> converting function runtime.printhex ( some time )
 -> converting function runtime.printpointer ( some time )
 -> converting function runtime.printstring ( some time )
 -> converting function runtime.printslice ( some time )
 -> converting function runtime.printeface ( some time )
 -> converting function runtime.Gosched ( some time )
 -> converting function runtime.gopark ( some time )
 -> converting function runtime.goparkunlock ( some time )
 -> converting function runtime.goready ( some time )
 -> converting function runtime.acquireSudog ( some time )
 -> converting function runtime.releaseSudog ( some time )
 -> converting function runtime.badmcall ( some time )
 -> converting function runtime.badmcall2 ( some time )
 -> converting function runtime.badreflectcall ( some time )
 -> converting function runtime.badmorestackg0 ( some time )
 -> converting function runtime.badmorestackgsignal ( some time )
 -> converting function runtime.badctxt ( some time )
 -> converting function runtime.allgadd ( some time )
 -> converting function runtime.schedinit ( some time )
 -> converting function runtime.dumpgstatus ( some time )
 -> converting function runtime.checkmcount ( some time )
 -> converting function runtime.mcommoninit ( some time )
 -> converting function runtime.ready ( some time )
 -> converting function runtime.gcprocs ( some time )
 -> converting function runtime.readgstatus ( some time )
 -> converting function runtime.casfrom_Gscanstatus ( some time )
 -> converting function runtime.castogscanstatus ( some time )
 -> converting function runtime.casgstatus ( some time )
 -> converting function runtime.mstart ( some time )
 -> converting function runtime.mstart1 ( some time )
 -> converting function runtime.runSafePointFn ( some time )
 -> converting function runtime.allocm ( some time )
 -> converting function runtime.newextram ( some time )
 -> converting function runtime.oneNewExtraM ( some time )
 -> converting function runtime.lockextra ( some time )
 -> converting function runtime.unlockextra ( some time )
 -> converting function runtime.newm ( some time )
 -> converting function runtime.stopm ( some time )
 -> converting function runtime.startm ( some time )
 -> converting function runtime.handoffp ( some time )
 -> converting function runtime.wakep ( some time )
 -> converting function runtime.stoplockedm ( some time )
 -> converting function runtime.startlockedm ( some time )
 -> converting function runtime.gcstopm ( some time )
 -> converting function runtime.execute ( some time )
 -> converting function runtime.findrunnable ( some time )
 -> converting function runtime.pollWork ( some time )
 -> converting function runtime.resetspinning ( some time )
 -> converting function runtime.injectglist ( some time )
 -> converting function runtime.schedule ( some time )
 -> converting function runtime.goschedImpl ( some time )
 -> converting function runtime.gopreempt_m ( some time )
 -> converting function runtime.save ( some time )
 -> converting function runtime.entersyscallblock ( some time )
 -> converting function runtime.exitsyscall ( some time )
 -> converting function runtime.exitsyscallfast ( some time )
 -> converting function runtime.exitsyscallfast_reacquired ( some time )
 -> converting function runtime.malg ( some time )
 -> converting function runtime.newproc ( some time )
 -> converting function runtime.gfpurge ( some time )
 -> converting function runtime.procresize ( some time )
 -> converting function runtime.acquirep ( some time )
 -> converting function runtime.acquirep1 ( some time )
 -> converting function runtime.releasep ( some time )
 -> converting function runtime.incidlelocked ( some time )
 -> converting function runtime.checkdead ( some time )
 -> converting function runtime.mput ( some time )
 -> converting function runtime.globrunqget ( some time )
 -> converting function runtime.pidleput ( some time )
 -> converting function runtime.pidleget ( some time )
 -> converting function runtime.runqempty ( some time )
 -> converting function runtime.runqput ( some time )
 -> converting function runtime.runqputslow ( some time )
 -> converting function runtime.runqget ( some time )
 -> converting function runtime.runqgrab ( some time )
 -> converting function runtime.runqsteal ( some time )
 -> converting function runtime.(*randomOrder).reset ( some time )
 -> converting function runtime.gcd ( some time )
 -> converting function runtime.gotraceback ( some time )
 -> converting function runtime.args ( some time )
 -> converting function runtime.goargs ( some time )
 -> converting function runtime.goenvs_unix ( some time )
 -> converting function runtime.testAtomic64 ( some time )
 -> converting function runtime.check ( some time )
 -> converting function runtime.parsedebugvars ( some time )
 -> converting function runtime/debug.SetTraceback ( some time )
 -> converting function runtime.timediv ( some time )
 -> converting function runtime.(*guintptr).cas ( some time )
 -> converting function runtime.extendRandom ( some time )
 -> converting function runtime.(*rwmutex).rlock ( some time )
 -> converting function runtime.(*rwmutex).runlock ( some time )
 -> converting function runtime.readyWithTime ( some time )
 -> converting function runtime.semacquire ( some time )
 -> converting function runtime.semacquire1 ( some time )
 -> converting function runtime.semrelease ( some time )
 -> converting function runtime.semrelease1 ( some time )
 -> converting function runtime.cansemacquire ( some time )
 -> converting function runtime.(*semaRoot).queue ( some time )
 -> converting function runtime.(*semaRoot).dequeue ( some time )
 -> converting function runtime.(*semaRoot).rotateLeft ( some time )
 -> converting function runtime.(*semaRoot).rotateRight ( some time )
 -> converting function runtime.initsig ( some time )
 -> converting function runtime.sigInstallGoHandler ( some time )
 -> converting function runtime.setThreadCPUProfiler ( some time )
 -> converting function runtime.msigsave ( some time )
 -> converting function runtime.minitSignals ( some time )
 -> converting function runtime.minitSignalStack ( some time )
 -> converting function runtime.minitSignalMask ( some time )
 -> converting function runtime.signalstack ( some time )
 -> converting function runtime.makeslice ( some time )
 -> converting function runtime.growslice ( some time )
 -> converting function runtime.stackinit ( some time )
 -> converting function runtime.stacklog2 ( some time )
 -> converting function runtime.stackpoolalloc ( some time )
 -> converting function runtime.stackpoolfree ( some time )
 -> converting function runtime.stackcacherefill ( some time )
 -> converting function runtime.stackcacherelease ( some time )
 -> converting function runtime.stackcache_clear ( some time )
 -> converting function runtime.stackalloc ( some time )
 -> converting function runtime.stackfree ( some time )
 -> converting function runtime.adjustctxt ( some time )
 -> converting function runtime.adjustdefers ( some time )
 -> converting function runtime.adjustsudogs ( some time )
 -> converting function runtime.findsghi ( some time )
 -> converting function runtime.syncadjustsudogs ( some time )
 -> converting function runtime.copystack ( some time )
 -> converting function runtime.round2 ( some time )
 -> converting function runtime.newstack ( some time )
 -> converting function runtime.shrinkstack ( some time )
 -> converting function runtime.morestackc ( some time )
 -> converting function runtime.slicebytetostring ( some time )
 -> converting function runtime.rawstring ( some time )
 -> converting function runtime.gostring ( some time )
 -> converting function runtime.index ( some time )
 -> converting function runtime.contains ( some time )
 -> converting function runtime.atoi ( some time )
 -> converting function runtime.atoi32 ( some time )
 -> converting function runtime.findnull ( some time )
 -> converting function runtime.gostringnocopy ( some time )
 -> converting function runtime.badsystemstack ( some time )
 -> converting function runtime.activeModules ( some time )
 -> converting function runtime.modulesinit ( some time )
 -> converting function runtime.moduledataverify ( some time )
 -> converting function runtime.moduledataverify1 ( some time )
 -> converting function runtime.findmoduledatap ( some time )
 -> converting function runtime.findfunc ( some time )
 -> converting function runtime.pcvalue ( some time )
 -> converting function runtime.funcname ( some time )
 -> converting function runtime.funcnameFromNameoff ( some time )
 -> converting function runtime.funcfile ( some time )
 -> converting function runtime.funcline1 ( some time )
 -> converting function runtime.funcline ( some time )
 -> converting function runtime.funcspdelta ( some time )
 -> converting function runtime.pcdatavalue ( some time )
 -> converting function runtime.funcdata ( some time )
 -> converting function runtime.step ( some time )
 -> converting function runtime.readvarint ( some time )
 -> converting function runtime.timejump ( some time )
 -> converting function time.now ( some time )
 -> converting function runtime.traceReader ( some time )
 -> converting function runtime.traceProcFree ( some time )
 -> converting function runtime.traceEvent ( some time )
 -> converting function runtime.traceStackID ( some time )
 -> converting function runtime.traceAcquireBuffer ( some time )
 -> converting function runtime.traceReleaseBuffer ( some time )
 -> converting function runtime.traceFlush ( some time )
 -> converting function runtime.(*traceBuf).varint ( some time )
 -> converting function runtime.(*traceStackTable).put ( some time )
 -> converting function runtime.(*traceStackTable).find ( some time )
 -> converting function runtime.(*traceStackTable).newStack ( some time )
 -> converting function runtime.(*traceAlloc).alloc ( some time )
 -> converting function runtime.traceGomaxprocs ( some time )
 -> converting function runtime.traceProcStart ( some time )
 -> converting function runtime.traceProcStop ( some time )
 -> converting function runtime.traceGCStart ( some time )
 -> converting function runtime.traceGCDone ( some time )
 -> converting function runtime.traceGCScanStart ( some time )
 -> converting function runtime.traceGCScanDone ( some time )
 -> converting function runtime.traceGCMarkAssistStart ( some time )
 -> converting function runtime.traceGCMarkAssistDone ( some time )
 -> converting function runtime.traceGoStart ( some time )
 -> converting function runtime.traceGoSched ( some time )
 -> converting function runtime.traceGoPreempt ( some time )
 -> converting function runtime.traceGoUnpark ( some time )
 -> converting function runtime.traceGoSysExit ( some time )
 -> converting function runtime.traceNextGC ( some time )
 -> converting function runtime.tracebackinit ( some time )
 -> converting function runtime.tracebackdefers ( some time )
 -> converting function runtime.gentraceback ( some time )
 -> converting function runtime.getArgInfo ( some time )
 -> converting function runtime.tracebackCgoContext ( some time )
 -> converting function runtime.printcreatedby ( some time )
 -> converting function runtime.traceback ( some time )
 -> converting function runtime.traceback1 ( some time )
 -> converting function runtime.callers ( some time )
 -> converting function runtime.gcallers ( some time )
 -> converting function runtime.showframe ( some time )
 -> converting function runtime.goroutineheader ( some time )
 -> converting function runtime.printCgoTraceback ( some time )
 -> converting function runtime.printOneCgoTraceback ( some time )
 -> converting function runtime.callCgoSymbolizer ( some time )
 -> converting function runtime.cgoContextPCs ( some time )
 -> converting function runtime.(*_type).string ( some time )
 -> converting function runtime.(*_type).uncommon ( some time )
 -> converting function runtime.reflectOffsLock ( some time )
 -> converting function runtime.reflectOffsUnlock ( some time )
 -> converting function runtime.resolveNameOff ( some time )
 -> converting function runtime.(*_type).nameOff ( some time )
 -> converting function runtime.resolveTypeOff ( some time )
 -> converting function runtime.(*_type).typeOff ( some time )
 -> converting function runtime.(*_type).textOff ( some time )
 -> converting function runtime.name.tagLen ( some time )
 -> converting function runtime.name.name ( some time )
 -> converting function runtime.name.tag ( some time )
 -> converting function runtime.name.pkgPath ( some time )
 -> converting function runtime.typelinksinit ( some time )
 -> converting function runtime.typesEqual ( some time )
 -> converting function runtime.float64toint64 ( some time )
 -> converting function runtime.float64touint64 ( some time )
 -> converting function runtime.int64tofloat64 ( some time )
 -> converting function runtime.uint64tofloat64 ( some time )
 -> converting function runtime._d2v ( some time )
 -> converting function runtime.uint64div ( some time )
 -> converting function runtime.uint64mod ( some time )
 -> converting function runtime.int64div ( some time )
 -> converting function runtime.int64mod ( some time )
 -> converting function runtime.dodiv ( some time )
 -> converting function runtime.slowdodiv ( some time )
 -> converting function runtime.writeErr ( some time )
 -> converting function runtime.(*gcControllerState).findRunnableGCWorker.func1 ( some time )
 -> converting function runtime.gcMarkRootPrepare.func1 ( some time )
 -> converting function runtime.rt0_go ( some time )
 -> converting function runtime.asminit ( some time )
 -> converting function runtime.gosave ( some time )
 -> converting function runtime.gogo ( some time )
 -> converting function runtime.mcall ( some time )
 -> converting function runtime.systemstack ( some time )
 -> converting function runtime.morestack ( some time )
 -> converting function runtime.morestack_noctxt ( some time )
 -> converting function runtime.reflectcall ( some time )
 -> converting function callRet ( some time )
 -> converting function runtime.call16 ( some time )
 -> converting function runtime.call32 ( some time )
 -> converting function runtime.call64 ( some time )
 -> converting function runtime.call128 ( some time )
 -> converting function runtime.call256 ( some time )
 -> converting function runtime.call512 ( some time )
 -> converting function runtime.call1024 ( some time )
 -> converting function runtime.call2048 ( some time )
 -> converting function runtime.call4096 ( some time )
 -> converting function runtime.call8192 ( some time )
 -> converting function runtime.call16384 ( some time )
 -> converting function runtime.call32768 ( some time )
 -> converting function runtime.call65536 ( some time )
 -> converting function runtime.call131072 ( some time )
 -> converting function runtime.call262144 ( some time )
 -> converting function runtime.call524288 ( some time )
 -> converting function runtime.call1048576 ( some time )
 -> converting function runtime.call2097152 ( some time )
 -> converting function runtime.call4194304 ( some time )
 -> converting function runtime.call8388608 ( some time )
 -> converting function runtime.call16777216 ( some time )
 -> converting function runtime.call33554432 ( some time )
 -> converting function runtime.call67108864 ( some time )
 -> converting function runtime.call134217728 ( some time )
 -> converting function runtime.call268435456 ( some time )
 -> converting function runtime.call536870912 ( some time )
 -> converting function runtime.call1073741824 ( some time )
 -> converting function runtime.procyield ( some time )
 -> converting function runtime.publicationBarrier ( some time )
 -> converting function runtime.jmpdefer ( some time )
 -> converting function gosave ( some time )
 -> converting function runtime.asmcgocall ( some time )
 -> converting function runtime.stackcheck ( some time )
 -> converting function runtime.getcallerpc ( some time )
 -> converting function runtime.cputicks ( some time )
 -> converting function runtime.ldt0setup ( some time )
 -> converting function runtime.emptyfunc ( some time )
 -> converting function runtime.aeshash ( some time )
 -> converting function runtime.aeshashbody ( some time )
 -> converting function runtime.checkASM ( some time )
 -> converting function runtime.eqstring ( some time )
 -> converting function runtime.memeqbody ( some time )
 -> converting function runtime.cmpstring ( some time )
 -> converting function runtime.cmpbody ( some time )
 -> converting function runtime.return0 ( some time )
 -> converting function runtime.prefetcht0 ( some time )
 -> converting function runtime.prefetcht1 ( some time )
 -> converting function runtime.prefetcht2 ( some time )
 -> converting function runtime.prefetchnta ( some time )
 -> converting function runtime.uint32tofloat64 ( some time )
 -> converting function runtime.float64touint32 ( some time )
 -> converting function runtime.duffzero ( some time )
 -> converting function function_808fd5c ( some time )
 -> converting function function_808fd60 ( some time )
 -> converting function function_808fd6d ( some time )
 -> converting function function_808fd70 ( some time )
 -> converting function function_808fd77 ( some time )
 -> converting function function_808fd85 ( some time )
 -> converting function function_808fd86 ( some time )
 -> converting function function_808fd87 ( some time )
 -> converting function function_808fd89 ( some time )
 -> converting function function_808fd8a ( some time )
 -> converting function function_808fd8b ( some time )
 -> converting function function_8090160 ( some time )
 -> converting function function_809025a ( some time )
 -> converting function function_809026e ( some time )
 -> converting function function_8090278 ( some time )
 -> converting function runtime.memclrNoHeapPointers ( some time )
 -> converting function runtime.memmove ( some time )
 -> converting function main ( some time )
 -> converting function runtime.exit ( some time )
 -> converting function runtime.exit1 ( some time )
 -> converting function runtime.open ( some time )
 -> converting function runtime.closefd ( some time )
 -> converting function runtime.write ( some time )
 -> converting function runtime.read ( some time )
 -> converting function runtime.usleep ( some time )
 -> converting function runtime.gettid ( some time )
 -> converting function runtime.setitimer ( some time )
 -> converting function runtime.mincore ( some time )
 -> converting function runtime.walltime ( some time )
 -> converting function runtime.nanotime ( some time )
 -> converting function runtime.rtsigprocmask ( some time )
 -> converting function runtime.rt_sigaction ( some time )
 -> converting function runtime.mmap ( some time )
 -> converting function runtime.munmap ( some time )
 -> converting function runtime.madvise ( some time )
 -> converting function runtime.futex ( some time )
 -> converting function runtime.clone ( some time )
 -> converting function runtime.sigaltstack ( some time )
 -> converting function runtime.setldt ( some time )
 -> converting function runtime.osyield ( some time )
 -> converting function runtime.sched_getaffinity ( some time )
 -> converting function runtime.epollwait ( some time )
 -> converting function runtime.sbrk0 ( some time )
 -> converting function runtime._mul64by32 ( some time )
 -> converting function runtime._div64by32 ( some time )
Running phase: removing functions from standard libraries ( some time )
Running phase: removing code that is not reachable in a CFG ( some time )
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var29 = (var20 + 1)` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x806dde4` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x8071ce5` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `stack_var__2d_88 = BitCastExpr<ptr>("findrunnable: netpoll with spinninggreyobject: obj not pointer-alignedmisrounded allocation in mallocinitnetwork dropped connection on resetpersistentalloc: align is too largepidleput: P has non-empty run queueruntime: close polldesc w/o unblocktraceback did not unwind completelytransport endpoint is not connected0123456789abcdefghijklmnopqrstuvwxyz444089209850062616169452667236328125Go pointer stored into non-Go memoryMStats vs MemStatsType size mismatchaccessing a corrupted shared librarykey size not a multiple of key alignmarkrootSpans during second markrootreflect: IsVariadic of non-func typereflect: NumField of non-struct typereflect: funcLayout of non-func typeruntime: bad notifyList size - sync=runtime: failed MSpanList_InsertBackruntime: invalid pc-encoded table f=runtime: invalid typeBitsBulkBarrierruntime: mcall called on m->g0 stackruntime: sudog with non-nil waitlinkruntime: unblock on closing polldescruntime: wrong goroutine in newstacksignal arrived during cgo execution\nsyntax error scanning complex numberuncaching span but s.allocCount == 0) is smaller than minimum page size (2220446049250313080847263336181640625_cgo_notify_runtime_init_done missingall goroutines are asleep - deadlock!cannot exec a shared library directlyoperation not possible due to RF-killreflect.Value.Bytes of non-byte slicereflect.Value.Bytes of non-rune slicereflect: Bits of non-arithmetic Type runtime: address space conflict: map(runtime: allocation size out of rangesetprofilebucket: profile already setstartTheWorld: inconsistent mp->nextpvalue too large for defined data type1110223024625156540423631668090820312555511151231257827021181583404541015625arg size to reflect.call more than 1GBcan not access a needed shared libraryconcurrent map iteration and map writegcBgMarkWorker: blackening not enabledmakechan: invalid channel element typeruntime: blocked read on free polldescruntime: function symbol table header:runtime: sudog with non-nil selectdone277555756156289135105907917022705078125MSpan_Sweep: bad span state after sweepmisrounded allocation in MHeap_SysAllocreceived on thread with no signal stackreflect: FieldByName of non-struct typeruntime: blocked write on free polldescruntime: casfrom_Gscanstatus failed gp=runtime: typeBitsBulkBarrier with type span and treap node npages do not matchstack growth not allowed in system calltransport endpoint is already connected13877787807814456755295395851135253906256938893903907228377647697925567626953125address family not supported by protocolbulkBarrierPreWrite: unaligned argumentscannot free workbufs when work.full != 0deferproc: d.panic != nil after newdeferreceived but handler not on signal stackrefill of span with free space remainingreflect.Value.SetBytes of non-byte slicereflect.Value.setRunes of non-rune slicereflect: FieldByIndex of non-struct typeruntime.SetFinalizer: first argument is runtime: out of memory: cannot allocate value size not a multiple of value align34694469519536141888238489627838134765625MHeap_FreeSpanLocked - invalid span stateMHeap_FreeSpanLocked - invalid stack freecan't call pointer on a non-pointer ValuegcSweep being done but phase is not GCoffruntime.SetFinalizer: second argument is runtime.makemap: unsupported map key typeruntime: blocked read on closing polldescruntime: typeBitsBulkBarrier without typesetCheckmarked and isCheckmarked disagreestopTheWorld: not stopped (stopwait != 0)strconv: illegal AppendInt/FormatInt base173472347597680709441192448139190673828125867361737988403547205962240695953369140625acquireSudog: found s.elem != nil in cachepersistentalloc: align is not a power of 2runtime: blocked write on closing polldescruntime: heapBitsSetTypeGCProg: total bitssync/atomic: store of nil value into Valueunexpected signal during runtime executiongcBgMarkWorker: unexpected gcMarkWorkerModegentraceback before goexitPC initializationheapBitsSetTypeGCProg: unexpected bit countinterrupted system call should be restartedmultiple Read calls return no data or errorreflect: FieldByNameFunc of non-struct typereflect: nil type passed to Type.Implementsruntime.SetFinalizer: finalizer already setruntime.SetFinalizer: first argument is nilruntime: casfrom_Gscanstatus bad oldval gp=runtime: releaseSudog with non-nil gp.paramunknown runnable goroutine during bootstrap using value obtained using unexported fieldgcmarknewobject called while doing checkmarkreflect: funcLayout with interface receiver runtime: lfstack.push invalid packing: node=systemstack called from unexpected goroutinecannot send after transport endpoint shutdownexitsyscall: syscall frame is no longer validheapBitsSetType: called with non-pointer typereflect: internal error: invalid method indexreflect: nil type passed to Type.AssignableToruntime: failed MSpanList_Remove span.npages=panicwrap: unexpected string after type name: reflect.Value.Slice: slice index out of boundsreflect: nil type passed to Type.ConvertibleToruntime: failed to create new OS thread (have runtime: name offset base pointer out of rangeruntime: panic before malloc heap initialized\nruntime: text offset base pointer out of rangeruntime: type offset base pointer out of rangestopTheWorld: not stopped (status != _Pgcstop)P has cached GC work at end of mark terminationattempting to link in too many shared librariesP has unflushed stats at end of mark terminationruntime: cannot map pages in arena address spacestrconv: illegal AppendFloat/FormatFloat bitSizecasgstatus: waiting for Gwaiting but is Grunnableinvalid memory address or nil pointer dereferenceinvalid or incomplete multibyte or wide characterpanicwrap: unexpected string after package name: reflect.Value.Slice: slice of unaddressable arrays.allocCount != s.nelems && freeIndex == s.nelemsstrconv: internal error, rest != 0 but needed > 0strconv: num > den<<shift in adjustLastDigitFixedwritebarrierptr_prewrite1 called with mp.p == nilattempt to execute system stack code on user stackmallocgc called with gcphase == _GCmarkterminationrecursive call during initialization - linker skewruntime: cannot reserve arena virtual address spacecasfrom_Gscanstatus: gp->status is not in scan statefunction symbol table not sorted by program counter:runtime.SetFinalizer: pointer not in allocated blockruntime: use of FixAlloc_Alloc before FixAlloc_Init\nreflect.Value.Slice: string slice index out of boundsreflect: non-interface type passed to Type.Implements\tgoroutine running on other thread; stack unavailable\ngcControllerState.findRunnable: blackening not enabledno goroutines (main called runtime.Goexit) - deadlock!reflect.FuncOf does not support more than 50 argumentscasfrom_Gscanstatus:top gp->status is not in scan stategentraceback callback cannot be used with non-zero skipnewproc: function arguments too large for new goroutinereflect.FuncOf: last arg of variadic func must be slicereflect: internal error: invalid use of makeMethodValuein gcMark expecting to see gcphase as _GCmarkterminationgentraceback cannot trace user goroutine on its own stacknon-Go code set up signal handler without SA_ONSTACK flagruntime:stoplockedm: g is not Grunnable or Gscanrunnable\nruntime: mmap: too much locked memory (check 'ulimit -l').\nsync/atomic: store of inconsistently typed value into Valueruntime: may need to increase max user processes (ulimit -u)reflect: creating a name with a package path is not supportedfound bad pointer in Go heap (incorrect use of unsafe or cgo?)runtime: internal error: misuse of lockOSThread/unlockOSThreadruntime.SetFinalizer: pointer not at beginning of allocated blockstrconv: internal error: extFloat.FixedDecimal called with n == 0runtime:greyobject: checkmarks finds unexpected unmarked object obj=reflect.Value.Interface: cannot return value obtained from unexported field or method00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899")` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var20 = *(IntToPtrCastExpr<ptr>((((var13 + 7) / 8) + PtrToIntCastExpr<int32>(&(runtime_size_to_class8)))))` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_funcname((var43 + var47), var18)` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var50 = *(var24)` -> skipping this edge
Running phase: signed/unsigned types fixing ( some time )
Running phase: converting LLVM intrinsic functions to standard functions ( some time )
Running phase: obtaining debug information ( some time )
Running phase: alias analysis [simple] ( some time )
Running phase: optimizations ( some time )
 -> running GotoStmtOptimizer ( some time )
 -> running RemoveUselessCastsOptimizer ( some time )
 -> running UnusedGlobalVarOptimizer ( some time )
 -> running DeadLocalAssignOptimizer ( some time )
 -> running SimpleCopyPropagationOptimizer ( some time )
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `# empty statement` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x806dde4` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x8071ce5` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `stack_var__2d_88 = BitCastExpr<ptr>("findrunnable: netpoll with spinninggreyobject: obj not pointer-alignedmisrounded allocation in mallocinitnetwork dropped connection on resetpersistentalloc: align is too largepidleput: P has non-empty run queueruntime: close polldesc w/o unblocktraceback did not unwind completelytransport endpoint is not connected0123456789abcdefghijklmnopqrstuvwxyz444089209850062616169452667236328125Go pointer stored into non-Go memoryMStats vs MemStatsType size mismatchaccessing a corrupted shared librarykey size not a multiple of key alignmarkrootSpans during second markrootreflect: IsVariadic of non-func typereflect: NumField of non-struct typereflect: funcLayout of non-func typeruntime: bad notifyList size - sync=runtime: failed MSpanList_InsertBackruntime: invalid pc-encoded table f=runtime: invalid typeBitsBulkBarrierruntime: mcall called on m->g0 stackruntime: sudog with non-nil waitlinkruntime: unblock on closing polldescruntime: wrong goroutine in newstacksignal arrived during cgo execution\nsyntax error scanning complex numberuncaching span but s.allocCount == 0) is smaller than minimum page size (2220446049250313080847263336181640625_cgo_notify_runtime_init_done missingall goroutines are asleep - deadlock!cannot exec a shared library directlyoperation not possible due to RF-killreflect.Value.Bytes of non-byte slicereflect.Value.Bytes of non-rune slicereflect: Bits of non-arithmetic Type runtime: address space conflict: map(runtime: allocation size out of rangesetprofilebucket: profile already setstartTheWorld: inconsistent mp->nextpvalue too large for defined data type1110223024625156540423631668090820312555511151231257827021181583404541015625arg size to reflect.call more than 1GBcan not access a needed shared libraryconcurrent map iteration and map writegcBgMarkWorker: blackening not enabledmakechan: invalid channel element typeruntime: blocked read on free polldescruntime: function symbol table header:runtime: sudog with non-nil selectdone277555756156289135105907917022705078125MSpan_Sweep: bad span state after sweepmisrounded allocation in MHeap_SysAllocreceived on thread with no signal stackreflect: FieldByName of non-struct typeruntime: blocked write on free polldescruntime: casfrom_Gscanstatus failed gp=runtime: typeBitsBulkBarrier with type span and treap node npages do not matchstack growth not allowed in system calltransport endpoint is already connected13877787807814456755295395851135253906256938893903907228377647697925567626953125address family not supported by protocolbulkBarrierPreWrite: unaligned argumentscannot free workbufs when work.full != 0deferproc: d.panic != nil after newdeferreceived but handler not on signal stackrefill of span with free space remainingreflect.Value.SetBytes of non-byte slicereflect.Value.setRunes of non-rune slicereflect: FieldByIndex of non-struct typeruntime.SetFinalizer: first argument is runtime: out of memory: cannot allocate value size not a multiple of value align34694469519536141888238489627838134765625MHeap_FreeSpanLocked - invalid span stateMHeap_FreeSpanLocked - invalid stack freecan't call pointer on a non-pointer ValuegcSweep being done but phase is not GCoffruntime.SetFinalizer: second argument is runtime.makemap: unsupported map key typeruntime: blocked read on closing polldescruntime: typeBitsBulkBarrier without typesetCheckmarked and isCheckmarked disagreestopTheWorld: not stopped (stopwait != 0)strconv: illegal AppendInt/FormatInt base173472347597680709441192448139190673828125867361737988403547205962240695953369140625acquireSudog: found s.elem != nil in cachepersistentalloc: align is not a power of 2runtime: blocked write on closing polldescruntime: heapBitsSetTypeGCProg: total bitssync/atomic: store of nil value into Valueunexpected signal during runtime executiongcBgMarkWorker: unexpected gcMarkWorkerModegentraceback before goexitPC initializationheapBitsSetTypeGCProg: unexpected bit countinterrupted system call should be restartedmultiple Read calls return no data or errorreflect: FieldByNameFunc of non-struct typereflect: nil type passed to Type.Implementsruntime.SetFinalizer: finalizer already setruntime.SetFinalizer: first argument is nilruntime: casfrom_Gscanstatus bad oldval gp=runtime: releaseSudog with non-nil gp.paramunknown runnable goroutine during bootstrap using value obtained using unexported fieldgcmarknewobject called while doing checkmarkreflect: funcLayout with interface receiver runtime: lfstack.push invalid packing: node=systemstack called from unexpected goroutinecannot send after transport endpoint shutdownexitsyscall: syscall frame is no longer validheapBitsSetType: called with non-pointer typereflect: internal error: invalid method indexreflect: nil type passed to Type.AssignableToruntime: failed MSpanList_Remove span.npages=panicwrap: unexpected string after type name: reflect.Value.Slice: slice index out of boundsreflect: nil type passed to Type.ConvertibleToruntime: failed to create new OS thread (have runtime: name offset base pointer out of rangeruntime: panic before malloc heap initialized\nruntime: text offset base pointer out of rangeruntime: type offset base pointer out of rangestopTheWorld: not stopped (status != _Pgcstop)P has cached GC work at end of mark terminationattempting to link in too many shared librariesP has unflushed stats at end of mark terminationruntime: cannot map pages in arena address spacestrconv: illegal AppendFloat/FormatFloat bitSizecasgstatus: waiting for Gwaiting but is Grunnableinvalid memory address or nil pointer dereferenceinvalid or incomplete multibyte or wide characterpanicwrap: unexpected string after package name: reflect.Value.Slice: slice of unaddressable arrays.allocCount != s.nelems && freeIndex == s.nelemsstrconv: internal error, rest != 0 but needed > 0strconv: num > den<<shift in adjustLastDigitFixedwritebarrierptr_prewrite1 called with mp.p == nilattempt to execute system stack code on user stackmallocgc called with gcphase == _GCmarkterminationrecursive call during initialization - linker skewruntime: cannot reserve arena virtual address spacecasfrom_Gscanstatus: gp->status is not in scan statefunction symbol table not sorted by program counter:runtime.SetFinalizer: pointer not in allocated blockruntime: use of FixAlloc_Alloc before FixAlloc_Init\nreflect.Value.Slice: string slice index out of boundsreflect: non-interface type passed to Type.Implements\tgoroutine running on other thread; stack unavailable\ngcControllerState.findRunnable: blackening not enabledno goroutines (main called runtime.Goexit) - deadlock!reflect.FuncOf does not support more than 50 argumentscasfrom_Gscanstatus:top gp->status is not in scan stategentraceback callback cannot be used with non-zero skipnewproc: function arguments too large for new goroutinereflect.FuncOf: last arg of variadic func must be slicereflect: internal error: invalid use of makeMethodValuein gcMark expecting to see gcphase as _GCmarkterminationgentraceback cannot trace user goroutine on its own stacknon-Go code set up signal handler without SA_ONSTACK flagruntime:stoplockedm: g is not Grunnable or Gscanrunnable\nruntime: mmap: too much locked memory (check 'ulimit -l').\nsync/atomic: store of inconsistently typed value into Valueruntime: may need to increase max user processes (ulimit -u)reflect: creating a name with a package path is not supportedfound bad pointer in Go heap (incorrect use of unsafe or cgo?)runtime: internal error: misuse of lockOSThread/unlockOSThreadruntime.SetFinalizer: pointer not at beginning of allocated blockstrconv: internal error: extFloat.FixedDecimal called with n == 0runtime:greyobject: checkmarks finds unexpected unmarked object obj=reflect.Value.Interface: cannot return value obtained from unexported field or method00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899")` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `# empty statement` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_funcname((var43 + var47), var18)` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var50 = *(var24)` -> skipping this edge
 -> running CopyPropagationOptimizer ( some time )
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `# empty statement` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x806dde4` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x8071ce5` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `stack_var__2d_88 = BitCastExpr<ptr>("findrunnable: netpoll with spinninggreyobject: obj not pointer-alignedmisrounded allocation in mallocinitnetwork dropped connection on resetpersistentalloc: align is too largepidleput: P has non-empty run queueruntime: close polldesc w/o unblocktraceback did not unwind completelytransport endpoint is not connected0123456789abcdefghijklmnopqrstuvwxyz444089209850062616169452667236328125Go pointer stored into non-Go memoryMStats vs MemStatsType size mismatchaccessing a corrupted shared librarykey size not a multiple of key alignmarkrootSpans during second markrootreflect: IsVariadic of non-func typereflect: NumField of non-struct typereflect: funcLayout of non-func typeruntime: bad notifyList size - sync=runtime: failed MSpanList_InsertBackruntime: invalid pc-encoded table f=runtime: invalid typeBitsBulkBarrierruntime: mcall called on m->g0 stackruntime: sudog with non-nil waitlinkruntime: unblock on closing polldescruntime: wrong goroutine in newstacksignal arrived during cgo execution\nsyntax error scanning complex numberuncaching span but s.allocCount == 0) is smaller than minimum page size (2220446049250313080847263336181640625_cgo_notify_runtime_init_done missingall goroutines are asleep - deadlock!cannot exec a shared library directlyoperation not possible due to RF-killreflect.Value.Bytes of non-byte slicereflect.Value.Bytes of non-rune slicereflect: Bits of non-arithmetic Type runtime: address space conflict: map(runtime: allocation size out of rangesetprofilebucket: profile already setstartTheWorld: inconsistent mp->nextpvalue too large for defined data type1110223024625156540423631668090820312555511151231257827021181583404541015625arg size to reflect.call more than 1GBcan not access a needed shared libraryconcurrent map iteration and map writegcBgMarkWorker: blackening not enabledmakechan: invalid channel element typeruntime: blocked read on free polldescruntime: function symbol table header:runtime: sudog with non-nil selectdone277555756156289135105907917022705078125MSpan_Sweep: bad span state after sweepmisrounded allocation in MHeap_SysAllocreceived on thread with no signal stackreflect: FieldByName of non-struct typeruntime: blocked write on free polldescruntime: casfrom_Gscanstatus failed gp=runtime: typeBitsBulkBarrier with type span and treap node npages do not matchstack growth not allowed in system calltransport endpoint is already connected13877787807814456755295395851135253906256938893903907228377647697925567626953125address family not supported by protocolbulkBarrierPreWrite: unaligned argumentscannot free workbufs when work.full != 0deferproc: d.panic != nil after newdeferreceived but handler not on signal stackrefill of span with free space remainingreflect.Value.SetBytes of non-byte slicereflect.Value.setRunes of non-rune slicereflect: FieldByIndex of non-struct typeruntime.SetFinalizer: first argument is runtime: out of memory: cannot allocate value size not a multiple of value align34694469519536141888238489627838134765625MHeap_FreeSpanLocked - invalid span stateMHeap_FreeSpanLocked - invalid stack freecan't call pointer on a non-pointer ValuegcSweep being done but phase is not GCoffruntime.SetFinalizer: second argument is runtime.makemap: unsupported map key typeruntime: blocked read on closing polldescruntime: typeBitsBulkBarrier without typesetCheckmarked and isCheckmarked disagreestopTheWorld: not stopped (stopwait != 0)strconv: illegal AppendInt/FormatInt base173472347597680709441192448139190673828125867361737988403547205962240695953369140625acquireSudog: found s.elem != nil in cachepersistentalloc: align is not a power of 2runtime: blocked write on closing polldescruntime: heapBitsSetTypeGCProg: total bitssync/atomic: store of nil value into Valueunexpected signal during runtime executiongcBgMarkWorker: unexpected gcMarkWorkerModegentraceback before goexitPC initializationheapBitsSetTypeGCProg: unexpected bit countinterrupted system call should be restartedmultiple Read calls return no data or errorreflect: FieldByNameFunc of non-struct typereflect: nil type passed to Type.Implementsruntime.SetFinalizer: finalizer already setruntime.SetFinalizer: first argument is nilruntime: casfrom_Gscanstatus bad oldval gp=runtime: releaseSudog with non-nil gp.paramunknown runnable goroutine during bootstrap using value obtained using unexported fieldgcmarknewobject called while doing checkmarkreflect: funcLayout with interface receiver runtime: lfstack.push invalid packing: node=systemstack called from unexpected goroutinecannot send after transport endpoint shutdownexitsyscall: syscall frame is no longer validheapBitsSetType: called with non-pointer typereflect: internal error: invalid method indexreflect: nil type passed to Type.AssignableToruntime: failed MSpanList_Remove span.npages=panicwrap: unexpected string after type name: reflect.Value.Slice: slice index out of boundsreflect: nil type passed to Type.ConvertibleToruntime: failed to create new OS thread (have runtime: name offset base pointer out of rangeruntime: panic before malloc heap initialized\nruntime: text offset base pointer out of rangeruntime: type offset base pointer out of rangestopTheWorld: not stopped (status != _Pgcstop)P has cached GC work at end of mark terminationattempting to link in too many shared librariesP has unflushed stats at end of mark terminationruntime: cannot map pages in arena address spacestrconv: illegal AppendFloat/FormatFloat bitSizecasgstatus: waiting for Gwaiting but is Grunnableinvalid memory address or nil pointer dereferenceinvalid or incomplete multibyte or wide characterpanicwrap: unexpected string after package name: reflect.Value.Slice: slice of unaddressable arrays.allocCount != s.nelems && freeIndex == s.nelemsstrconv: internal error, rest != 0 but needed > 0strconv: num > den<<shift in adjustLastDigitFixedwritebarrierptr_prewrite1 called with mp.p == nilattempt to execute system stack code on user stackmallocgc called with gcphase == _GCmarkterminationrecursive call during initialization - linker skewruntime: cannot reserve arena virtual address spacecasfrom_Gscanstatus: gp->status is not in scan statefunction symbol table not sorted by program counter:runtime.SetFinalizer: pointer not in allocated blockruntime: use of FixAlloc_Alloc before FixAlloc_Init\nreflect.Value.Slice: string slice index out of boundsreflect: non-interface type passed to Type.Implements\tgoroutine running on other thread; stack unavailable\ngcControllerState.findRunnable: blackening not enabledno goroutines (main called runtime.Goexit) - deadlock!reflect.FuncOf does not support more than 50 argumentscasfrom_Gscanstatus:top gp->status is not in scan stategentraceback callback cannot be used with non-zero skipnewproc: function arguments too large for new goroutinereflect.FuncOf: last arg of variadic func must be slicereflect: internal error: invalid use of makeMethodValuein gcMark expecting to see gcphase as _GCmarkterminationgentraceback cannot trace user goroutine on its own stacknon-Go code set up signal handler without SA_ONSTACK flagruntime:stoplockedm: g is not Grunnable or Gscanrunnable\nruntime: mmap: too much locked memory (check 'ulimit -l').\nsync/atomic: store of inconsistently typed value into Valueruntime: may need to increase max user processes (ulimit -u)reflect: creating a name with a package path is not supportedfound bad pointer in Go heap (incorrect use of unsafe or cgo?)runtime: internal error: misuse of lockOSThread/unlockOSThreadruntime.SetFinalizer: pointer not at beginning of allocated blockstrconv: internal error: extFloat.FixedDecimal called with n == 0runtime:greyobject: checkmarks finds unexpected unmarked object obj=reflect.Value.Interface: cannot return value obtained from unexported field or method00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899")` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `# empty statement` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_funcname((var43 + var47), var18)` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var50 = *(var24)` -> skipping this edge
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running IfStructureOptimizer ( some time )
 -> running LoopLastContinueOptimizer ( some time )
 -> running PreWhileTrueLoopConvOptimizer ( some time )
 -> running WhileTrueToForLoopOptimizer ( some time )
 -> running WhileTrueToWhileCondOptimizer ( some time )
 -> running IfBeforeLoopOptimizer ( some time )
 -> running LLVMIntrinsicsOptimizer ( some time )
 -> running VoidReturnOptimizer ( some time )
 -> running BreakContinueReturnOptimizer ( some time )
 -> running BitShiftOptimizer ( some time )
 -> running DerefAddressOptimizer ( some time )
 -> running EmptyArrayToStringOptimizer ( some time )
 -> running BitOpToLogOpOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running UnusedGlobalVarOptimizer ( some time )
 -> running DeadLocalAssignOptimizer ( some time )
 -> running SimpleCopyPropagationOptimizer ( some time )
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x806dde4` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `*(_pre97) = 1` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var99 = IntToPtrCastExpr<ptr>((var45 + 52))` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `# empty statement` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var50 = *(var24)` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `stack_var__2d_284_0_reload = stack_var__2d_284_0_reg2mem` -> skipping this edge
 -> running CopyPropagationOptimizer ( some time )
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `runtime_panicindex()` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `goto 0x806dde4` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `*(_pre97) = 1` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var99 = IntToPtrCastExpr<ptr>((var45 + 52))` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `# empty statement` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `var50 = *(var24)` -> skipping this edge
Warning: [NonRecursiveCFGBuilder] there is no node for an edge to `stack_var__2d_284_0_reload = stack_var__2d_284_0_reg2mem` -> skipping this edge
 -> running SelfAssignOptimizer ( some time )
 -> running VarDefForLoopOptimizer ( some time )
 -> running VarDefStmtOptimizer ( some time )
 -> running EmptyStmtOptimizer ( some time )
 -> running GotoStmtOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running DeadCodeOptimizer ( some time )
 -> running DerefToArrayIndexOptimizer ( some time )
 -> running IfToSwitchOptimizer ( some time )
 -> running CCastOptimizer ( some time )
 -> running CArrayArgOptimizer ( some time )
Running phase: variable renaming [readable] ( some time )
Running phase: converting constants to symbolic names ( some time )
Running phase: module validation ( some time )
 -> running BreakOutsideLoopValidator ( some time )
Warning: In runtime_gcDrain(), found `break` outside of a loop or a switch statement.
Warning: In runtime_testdefersizes(), found `break` outside of a loop or a switch statement.
Warning: In runtime_gopanic(), found `break` outside of a loop or a switch statement.
Warning: In runtime_acquireSudog(), found `break` outside of a loop or a switch statement.
Warning: In runtime_index(), found `break` outside of a loop or a switch statement.
Warning: In runtime_findmoduledatap(), found `break` outside of a loop or a switch statement.
Warning: In runtime__28__2a_traceStackTable_29__find(), found `break` outside of a loop or a switch statement.
Warning: In runtime_tracebackdefers(), found `break` outside of a loop or a switch statement.
Warning: In runtime_memmove(), found `break` outside of a loop or a switch statement.
 -> running NoGlobalVarDefValidator ( some time )
 -> running ReturnValidator ( some time )
Running phase: emission of the target code [c] ( some time )
Running phase: finalization ( some time )
Running phase: cleanup ( some time )
