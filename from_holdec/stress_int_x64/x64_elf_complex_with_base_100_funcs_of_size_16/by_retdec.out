Running phase: Unpacking ( some time )
No matching plugins found for 'GCC 8.3.1'
No matching plugins found for 'GCC 4.5.1'
Running phase: Initialization ( some time )
Running phase: Providers initialization ( some time )
Running phase: Input binary to LLVM IR decoding ( some time )
Running phase: LLVM ( some time )
Running phase: x86 address spaces optimization ( some time )
Running phase: x87 fpu register analysis ( some time )
Running phase: Main function identification optimization ( some time )
Running phase: Libgcc idioms optimization ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Conditional branch optimization ( some time )
Running phase: Syscalls optimization ( some time )
Running phase: Stack optimization ( some time )
Running phase: Constants optimization ( some time )
Running phase: Function parameters and returns optimization ( some time )
Running phase: LLVM instruction optimization using RDA ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Simple types recovery optimization ( some time )
Running phase: Disassembly generation ( some time )
Running phase: Assembly mapping instruction removal ( some time )
Running phase: C++ class hierarchy optimization ( some time )
Running phase: Selected functions optimization ( some time )
Running phase: Unreachable functions optimization ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Make all registers local ( some time )
Running phase: Value protection optimization ( some time )
Running phase: LLVM ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Simple types recovery optimization ( some time )
Running phase: Stack pointer operations optimization ( some time )
Running phase: Instruction idioms optimization ( some time )
Running phase: LLVM ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Instruction idioms optimization ( some time )
Running phase: Phi removal ( some time )
Running phase: LLVM ( some time )
Running phase: Value protection optimization ( some time )
Running phase: Generate the current LLVM IR ( some time )
Running phase: Generate the current bitcode ( some time )
Running phase: LLVM IR -> HLL ( some time )
Running phase: initialization ( some time )
 -> loading the input config ( some time )
 -> creating the used HLL writer [c] ( some time )
 -> creating the used alias analysis [simple] ( some time )
 -> creating the used call info obtainer [optim] ( some time )
 -> creating the used evaluator of arithmetical expressions [c] ( some time )
 -> creating the used variable names generator [fruit] ( some time )
 -> creating the used variable renamer [readable] ( some time )
 -> creating the used semantics [libc,gcc-general,win-api] ( some time )
Running phase: conversion of LLVM IR into BIR ( some time )
 -> converting global variables ( some time )
 -> converting function main ( some time )
 -> converting function log_size_4_var_000 ( some time )
 -> converting function log_size_4_var_001 ( some time )
 -> converting function log_size_4_var_002 ( some time )
 -> converting function log_size_4_var_003 ( some time )
 -> converting function log_size_4_var_004 ( some time )
 -> converting function log_size_4_var_005 ( some time )
 -> converting function log_size_4_var_006 ( some time )
 -> converting function log_size_4_var_007 ( some time )
 -> converting function log_size_4_var_008 ( some time )
 -> converting function log_size_4_var_009 ( some time )
 -> converting function log_size_4_var_010 ( some time )
 -> converting function log_size_4_var_011 ( some time )
 -> converting function log_size_4_var_012 ( some time )
 -> converting function log_size_4_var_013 ( some time )
 -> converting function log_size_4_var_014 ( some time )
 -> converting function log_size_4_var_015 ( some time )
 -> converting function log_size_4_var_016 ( some time )
 -> converting function log_size_4_var_017 ( some time )
 -> converting function log_size_4_var_018 ( some time )
 -> converting function log_size_4_var_019 ( some time )
 -> converting function log_size_4_var_020 ( some time )
 -> converting function log_size_4_var_021 ( some time )
 -> converting function log_size_4_var_022 ( some time )
 -> converting function log_size_4_var_023 ( some time )
 -> converting function log_size_4_var_024 ( some time )
 -> converting function log_size_4_var_025 ( some time )
 -> converting function log_size_4_var_026 ( some time )
 -> converting function log_size_4_var_027 ( some time )
 -> converting function log_size_4_var_028 ( some time )
 -> converting function log_size_4_var_029 ( some time )
 -> converting function log_size_4_var_030 ( some time )
 -> converting function log_size_4_var_031 ( some time )
 -> converting function log_size_4_var_032 ( some time )
 -> converting function log_size_4_var_033 ( some time )
 -> converting function log_size_4_var_034 ( some time )
 -> converting function log_size_4_var_035 ( some time )
 -> converting function log_size_4_var_036 ( some time )
 -> converting function log_size_4_var_037 ( some time )
 -> converting function log_size_4_var_038 ( some time )
 -> converting function log_size_4_var_039 ( some time )
 -> converting function log_size_4_var_040 ( some time )
 -> converting function log_size_4_var_041 ( some time )
 -> converting function log_size_4_var_042 ( some time )
 -> converting function log_size_4_var_043 ( some time )
 -> converting function log_size_4_var_044 ( some time )
 -> converting function log_size_4_var_045 ( some time )
 -> converting function log_size_4_var_046 ( some time )
 -> converting function log_size_4_var_047 ( some time )
 -> converting function log_size_4_var_048 ( some time )
 -> converting function log_size_4_var_049 ( some time )
 -> converting function log_size_4_var_050 ( some time )
 -> converting function log_size_4_var_051 ( some time )
 -> converting function log_size_4_var_052 ( some time )
 -> converting function log_size_4_var_053 ( some time )
 -> converting function log_size_4_var_054 ( some time )
 -> converting function log_size_4_var_055 ( some time )
 -> converting function log_size_4_var_056 ( some time )
 -> converting function log_size_4_var_057 ( some time )
 -> converting function log_size_4_var_058 ( some time )
 -> converting function log_size_4_var_059 ( some time )
 -> converting function log_size_4_var_060 ( some time )
 -> converting function log_size_4_var_061 ( some time )
 -> converting function log_size_4_var_062 ( some time )
 -> converting function log_size_4_var_063 ( some time )
 -> converting function log_size_4_var_064 ( some time )
 -> converting function log_size_4_var_065 ( some time )
 -> converting function log_size_4_var_066 ( some time )
 -> converting function log_size_4_var_067 ( some time )
 -> converting function log_size_4_var_068 ( some time )
 -> converting function log_size_4_var_069 ( some time )
 -> converting function log_size_4_var_070 ( some time )
 -> converting function log_size_4_var_071 ( some time )
 -> converting function log_size_4_var_072 ( some time )
 -> converting function log_size_4_var_073 ( some time )
 -> converting function log_size_4_var_074 ( some time )
 -> converting function log_size_4_var_075 ( some time )
 -> converting function log_size_4_var_076 ( some time )
 -> converting function log_size_4_var_077 ( some time )
 -> converting function log_size_4_var_078 ( some time )
 -> converting function log_size_4_var_079 ( some time )
 -> converting function log_size_4_var_080 ( some time )
 -> converting function log_size_4_var_081 ( some time )
 -> converting function log_size_4_var_082 ( some time )
 -> converting function log_size_4_var_083 ( some time )
 -> converting function log_size_4_var_084 ( some time )
 -> converting function log_size_4_var_085 ( some time )
 -> converting function log_size_4_var_086 ( some time )
 -> converting function log_size_4_var_087 ( some time )
 -> converting function log_size_4_var_088 ( some time )
 -> converting function log_size_4_var_089 ( some time )
 -> converting function log_size_4_var_090 ( some time )
 -> converting function log_size_4_var_091 ( some time )
 -> converting function log_size_4_var_092 ( some time )
 -> converting function log_size_4_var_093 ( some time )
 -> converting function log_size_4_var_094 ( some time )
 -> converting function log_size_4_var_095 ( some time )
 -> converting function log_size_4_var_096 ( some time )
 -> converting function log_size_4_var_097 ( some time )
 -> converting function log_size_4_var_098 ( some time )
 -> converting function log_size_4_var_099 ( some time )
Running phase: removing functions from standard libraries ( some time )
Running phase: removing code that is not reachable in a CFG ( some time )
Running phase: signed/unsigned types fixing ( some time )
Running phase: converting LLVM intrinsic functions to standard functions ( some time )
Running phase: obtaining debug information ( some time )
Running phase: alias analysis [simple] ( some time )
Running phase: optimizations ( some time )
 -> running GotoStmtOptimizer ( some time )
 -> running RemoveUselessCastsOptimizer ( some time )
 -> running UnusedGlobalVarOptimizer ( some time )
 -> running DeadLocalAssignOptimizer ( some time )
 -> running SimpleCopyPropagationOptimizer ( some time )
 -> running CopyPropagationOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running IfStructureOptimizer ( some time )
 -> running LoopLastContinueOptimizer ( some time )
 -> running PreWhileTrueLoopConvOptimizer ( some time )
 -> running WhileTrueToForLoopOptimizer ( some time )
 -> running WhileTrueToWhileCondOptimizer ( some time )
 -> running IfBeforeLoopOptimizer ( some time )
 -> running LLVMIntrinsicsOptimizer ( some time )
 -> running VoidReturnOptimizer ( some time )
 -> running BreakContinueReturnOptimizer ( some time )
 -> running BitShiftOptimizer ( some time )
 -> running DerefAddressOptimizer ( some time )
 -> running EmptyArrayToStringOptimizer ( some time )
 -> running BitOpToLogOpOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running UnusedGlobalVarOptimizer ( some time )
 -> running DeadLocalAssignOptimizer ( some time )
 -> running SimpleCopyPropagationOptimizer ( some time )
 -> running CopyPropagationOptimizer ( some time )
 -> running SelfAssignOptimizer ( some time )
 -> running VarDefForLoopOptimizer ( some time )
 -> running VarDefStmtOptimizer ( some time )
 -> running EmptyStmtOptimizer ( some time )
 -> running GotoStmtOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running DeadCodeOptimizer ( some time )
 -> running DerefToArrayIndexOptimizer ( some time )
 -> running IfToSwitchOptimizer ( some time )
 -> running CCastOptimizer ( some time )
 -> running CArrayArgOptimizer ( some time )
Running phase: variable renaming [readable] ( some time )
Running phase: converting constants to symbolic names ( some time )
Running phase: module validation ( some time )
 -> running BreakOutsideLoopValidator ( some time )
 -> running NoGlobalVarDefValidator ( some time )
 -> running ReturnValidator ( some time )
Running phase: emission of the target code [c] ( some time )
Running phase: finalization ( some time )
Running phase: cleanup ( some time )
