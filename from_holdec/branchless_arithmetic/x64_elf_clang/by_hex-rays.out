
Database SUBJECTS/from_holdec/branchless_arithmetic/x64_elf_clang/subject.exe.i64 already exists.
Do you want to overwrite it? -> ~L~oad existing

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
    65536     8 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
   851968            total memory allocated

Loading processor module IDADIR/procs/pc64.so for metapc...Initializing processor module metapc...OK
Loading type libraries...
Autoanalysis subsystem has been initialized.
Database for file 'subject.exe' has been loaded.
Hex-Rays Decompiler plugin has been loaded (v7.6.0.210427)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.

  Please check the Edit/Plugins menu for more informaton.
=== start of cleanup script -> OK
  function at 00401000  LIB  with name '.init_proc'
  function at 00401020       with name 'sub_401020'
  function at 00401030       with name '.puts'
  function at 00401040       with name '.printf'
  function at 00401050  LIB  with name '_start'
  function at 00401080  LIB  with name '_dl_relocate_static_pie'
  function at 00401090  LIB  with name 'deregister_tm_clones'
  function at 004010C0  LIB  with name 'register_tm_clones'
  function at 00401100  LIB  with name '__do_global_dtors_aux'
  function at 00401130  LIB  with name 'frame_dummy'
  function at 00401140       with name 'sat_addu32b'
  function at 00401150       with name 'sat_subu32b'
  function at 00401160       with name 'sat_divu32b'
  function at 00401170       with name 'sat_mulu32b'
  function at 00401180       with name 'sat_addu64b'
  function at 00401190       with name 'sat_subu64b'
  function at 004011A0       with name 'sat_divu64b'
  function at 004011C0       with name 'sat_mulu64b'
  function at 004011E0       with name 'sat_adds32b_var1'
  function at 00401200       with name 'sat_adds32b_var2'
  function at 00401220       with name 'sat_adds32b_var3'
  function at 00401240       with name 'sat_subs32b'
  function at 00401260       with name 'sat_divs32b'
  function at 00401280       with name 'sat_muls32b'
  function at 004012B0       with name 'sat_adds64b'
  function at 004012E0       with name 'sat_subs64b'
  function at 00401310       with name 'sat_divs64b'
  function at 00401350       with name 'sat_muls64b'
  function at 00401380       with name 'abs32'
  function at 00401390       with name 'abs64'
  function at 004013A0       with name 'sgn32'
  function at 004013B0       with name 'sgn64'
  function at 004013C0       with name 'main'
  function at 00401610  LIB  with name '__libc_csu_init'
  function at 00401680  LIB  with name '__libc_csu_fini'
  function at 00401688  LIB  with name '.term_proc'
  function at 00404038       with name 'puts'
  function at 00404040       with name 'printf'
  function at 00404048  LIB  with name '__libc_start_main'
  function at 00404050       with name '__gmon_start__'
finished -> OK
TIMESTAMP decompiling 401020 size=000000000000000C times=0...
The decompiler assumes that the segment '.got.plt' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 401140 size=000000000000000B times=0...
TIMESTAMP decompiling 401150 size=0000000000000008 times=0...
TIMESTAMP decompiling 401160 size=0000000000000007 times=0...
TIMESTAMP decompiling 401170 size=000000000000000D times=0...
TIMESTAMP decompiling 401180 size=000000000000000F times=0...
TIMESTAMP decompiling 401190 size=000000000000000A times=0...
TIMESTAMP decompiling 4011A0 size=000000000000001A times=0...
TIMESTAMP decompiling 4011C0 size=0000000000000012 times=0...
TIMESTAMP decompiling 4011E0 size=0000000000000014 times=0...
TIMESTAMP decompiling 401200 size=000000000000001A times=0...
TIMESTAMP decompiling 401220 size=000000000000001A times=0...
TIMESTAMP decompiling 401240 size=000000000000001A times=0...
TIMESTAMP decompiling 401260 size=0000000000000018 times=0...
TIMESTAMP decompiling 401280 size=0000000000000029 times=0...
TIMESTAMP decompiling 4012B0 size=0000000000000029 times=0...
TIMESTAMP decompiling 4012E0 size=0000000000000028 times=0...
TIMESTAMP decompiling 401310 size=0000000000000033 times=0...
TIMESTAMP decompiling 401350 size=0000000000000029 times=0...
TIMESTAMP decompiling 401380 size=0000000000000008 times=0...
TIMESTAMP decompiling 401390 size=000000000000000B times=0...
TIMESTAMP decompiling 4013A0 size=000000000000000D times=0...
TIMESTAMP decompiling 4013B0 size=0000000000000010 times=0...
TIMESTAMP decompiling 4013C0 size=0000000000000248 times=0...
TIMESTAMP The application has been completely decompiled.
Flushing buffers, please wait...ok
Unloading IDP module IDADIR/procs/pc64.so...
