
Database SUBJECTS/from_holdec/int_math_with_constants/ia32_elf_gcc_Os/subject.exe.idb already exists.
Do you want to overwrite it? -> ~L~oad existing
IDA has found an unpacked version of database: SUBJECTS/from_holdec/int_math_with_constants/ia32_elf_gcc_Os/subject.exe.idb
on the disk.
It appears IDA did not close properly;
it is probably safer to restart your work from the packed database -> ~R~estore packed base

  bytes   pages size description
--------- ----- ---- --------------------------------------------
  4751360   580 8192 allocating memory for b-tree...
  3350528   409 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
  8364032            total memory allocated

Loading processor module IDADIR/procs/pc.so for metapc...Initializing processor module metapc...OK
Loading type libraries...
Autoanalysis subsystem has been initialized.
Database for file 'subject.exe' has been loaded.
Hex-Rays Decompiler plugin has been loaded (v7.6.0.210427)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.

  Please check the Edit/Plugins menu for more informaton.
=== start of cleanup script -> OK
  function at 0804828C  LIB  with name '.init_proc'
  function at 080482B0       with name 'sub_80482B0'
  function at 080482C0  LIB  with name '.__libc_start_main'
  function at 080482D0       with name '__gmon_start__'
  function at 080482E0       with name 'main'
  function at 080483C0  LIB  with name '_start'
  function at 080483F0  LIB  with name '__x86.get_pc_thunk.bx'
  function at 08048400  LIB  with name 'deregister_tm_clones'
  function at 08048430  LIB  with name 'register_tm_clones'
  function at 08048470  LIB  with name '__do_global_dtors_aux'
  function at 08048490  LIB  with name 'frame_dummy'
  function at 080484BB       with name 'signed_char_add'
  function at 0804B8A4       with name 'signed_char_mult'
  function at 0804F42D       with name 'signed_char_div'
  function at 0805152E       with name 'signed_char_modulo'
  function at 0805412B       with name 'unsigned_char_add'
  function at 08057514       with name 'unsigned_char_mult'
  function at 0805B09D       with name 'unsigned_char_div'
  function at 0805D47F       with name 'unsigned_char_modulo'
  function at 08060825       with name 'signed_short_add'
  function at 080647A9       with name 'signed_short_mult'
  function at 08068332       with name 'signed_short_div'
  function at 0806EB29       with name 'signed_short_modulo'
  function at 0807571C       with name 'unsigned_short_add'
  function at 080796A0       with name 'unsigned_short_mult'
  function at 0807D229       with name 'unsigned_short_div'
  function at 080829E4       with name 'unsigned_short_modulo'
  function at 0808858B       with name 'signed_int_add'
  function at 0808C08E       with name 'signed_int_mult'
  function at 0808FB11       with name 'signed_int_div'
  function at 0809430E       with name 'signed_int_modulo'
  function at 08098F0A       with name 'unsigned_int_add'
  function at 0809CA0D       with name 'unsigned_int_mult'
  function at 080A0490       with name 'unsigned_int_div'
  function at 080A504F       with name 'unsigned_int_modulo'
  function at 080AA007       with name 'signed_long_int_add'
  function at 080ADB0A       with name 'signed_long_int_mult'
  function at 080B158D       with name 'signed_long_int_div'
  function at 080B5D8A       with name 'signed_long_int_modulo'
  function at 080BA986       with name 'unsigned_long_int_add'
  function at 080BE489       with name 'unsigned_long_int_mult'
  function at 080C1F0C       with name 'unsigned_long_int_div'
  function at 080C6ACB       with name 'unsigned_long_int_modulo'
  function at 080CBA83       with name 'signed_long_long_add'
  function at 080D318A       with name 'signed_long_long_mult'
  function at 080DC7BE       with name 'signed_long_long_div'
  function at 080E5E9B       with name 'signed_long_long_modulo'
  function at 080EF5F1       with name 'unsigned_long_long_add'
  function at 080F6CF8       with name 'unsigned_long_long_mult'
  function at 0810032C       with name 'unsigned_long_long_div'
  function at 08109961       with name 'unsigned_long_long_modulo'
  function at 08112F60       with name '__divdi3'
  function at 081130D0       with name '__moddi3'
  function at 081132B0       with name '__udivdi3'
  function at 081133E0       with name '__umoddi3'
  function at 08113530  LIB  with name '__libc_csu_init'
  function at 08113590  LIB  with name '__libc_csu_fini'
  function at 08113594  LIB  with name '.term_proc'
  function at 08128044  LIB  with name '__libc_start_main'
  function at 08128048       with name '__imp___gmon_start__'
finished -> OK
TIMESTAMP decompiling 80482B0 size=0000000C times=0...
The decompiler assumes that the segment '.got.plt' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 80484BB size=000033E9 times=0...
TIMESTAMP decompiling 804B8A4 size=00003B89 times=0...
TIMESTAMP decompiling 804F42D size=00002101 times=0...
TIMESTAMP decompiling 805152E size=00002BFD times=0...
TIMESTAMP decompiling 805412B size=000033E9 times=0...
