Possible file format: ELF64 for x86-64 (Executable) (IDADIR/loaders/elf64.so)

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
    73728     9 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
   860160            total memory allocated

Loading file 'SUBJECTS/from_holdec/simple_float_ops/x64_elf_gcc_O3/subject.exe' into database...
Detected file format: ELF64 for x86-64 (Executable)
Loading processor module IDADIR/procs/pc64.so for metapc...Initializing processor module metapc...OK
Autoanalysis subsystem has been initialized.
  0. Creating a new segment  (0000000000400000-0000000000400D84) ... ... OK
  1. Creating a new segment  (0000000000600E08-0000000000601068) ... ... OK
Assuming __fastcall calling convention by default
Type library 'gnulnx_x64' loaded. Applying types...
Types applied to 0 names.
  2. Creating a new segment  (00000000004003C8-00000000004003DF) ... ... OK
  3. Creating a new segment  (00000000004003DF-0000000000400D84) ... ... OK
  4. Creating a new segment  (00000000004003E0-0000000000400400) ... ... OK
  5. Creating a new segment  (0000000000400400-0000000000400D84) ... ... OK
  6. Creating a new segment  (0000000000400400-0000000000400A02) ... ... OK
     Deleting segment        (0000000000400A02-0000000000400D84) ...
  6. Creating a new segment  (0000000000400A02-0000000000400D84) ... ... OK
  7. Creating a new segment  (0000000000400A04-0000000000400A0D) ... ... OK
  8. Creating a new segment  (0000000000400A0D-0000000000400D84) ... ... OK
  9. Creating a new segment  (0000000000400A10-0000000000400A80) ... ... OK
 10. Creating a new segment  (0000000000400A80-0000000000400D84) ... ... OK
 11. Creating a new segment  (0000000000400A80-0000000000400B2C) ... ... OK
     Deleting segment        (0000000000400B2C-0000000000400D84) ...
 11. Creating a new segment  (0000000000400B2C-0000000000400D84) ... ... OK
 12. Creating a new segment  (0000000000400B30-0000000000400D84) ... ... OK
 13. Creating a new segment  (0000000000600E08-0000000000600E10) ... ... OK
     Deleting segment        (0000000000600E10-0000000000601068) ...
 13. Creating a new segment  (0000000000600E10-0000000000601068) ... ... OK
 14. Creating a new segment  (0000000000600E10-0000000000600E18) ... ... OK
     Deleting segment        (0000000000600E18-0000000000601068) ...
 14. Creating a new segment  (0000000000600E18-0000000000601068) ... ... OK
 15. Creating a new segment  (0000000000600E18-0000000000600E20) ... ... OK
     Deleting segment        (0000000000600E20-0000000000601068) ...
 15. Creating a new segment  (0000000000600E20-0000000000601068) ... ... OK
 16. Creating a new segment  (0000000000600FF0-0000000000601000) ... ... OK
 17. Creating a new segment  (0000000000601000-0000000000601068) ... ... OK
 18. Creating a new segment  (0000000000601000-0000000000601020) ... ... OK
     Deleting segment        (0000000000601020-0000000000601068) ...
 18. Creating a new segment  (0000000000601020-0000000000601068) ... ... OK
 19. Creating a new segment  (0000000000601020-0000000000601067) ... ... OK
     Deleting segment        (0000000000601067-0000000000601068) ...
 19. Creating a new segment  (0000000000601067-0000000000601068) ... ... OK
     Deleting segment        (0000000000601067-0000000000601068) ...
 19. Creating a new segment  (0000000000601067-0000000000601068) ... ... OK
 20. Creating a new segment  (0000000000601068-0000000000601069) ... ... OK
 21. Creating a new segment  (0000000000601070-0000000000601088) ... ... OK
Processing relocations...
DWARF: File "SUBJECTS/from_holdec/simple_float_ops/x64_elf_gcc_O3/subject.exe" contains DWARF information.
DWARF: Functions: 16 symbols applied
DWARF: Globals: 8 symbols applied
Marking typical code sequences...
Flushing buffers, please wait...ok
File 'SUBJECTS/from_holdec/simple_float_ops/x64_elf_gcc_O3/subject.exe' has been successfully loaded into the database.
Hex-Rays Decompiler plugin has been loaded (v7.5.0.201028)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.
  Please check the Edit/Plugins menu for more informaton.
IDAPython Hex-Rays bindings initialized.
IDA is analysing the input file...
You may start to explore the input file right now.
Propagating type information...
Function argument information has been propagated
lumina: applied metadata to 4 functions.
The initial autoanalysis has been finished.
Flushing buffers, please wait...ok
TIMESTAMP decompiling 4003C8 size=0000000000000017 times=0...
The decompiler assumes that the segment '.got' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 4003E0 size=000000000000000C times=0...
The decompiler assumes that the segment '.got.plt' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 400400 size=000000000000004D times=0...
TIMESTAMP decompiling 400480 size=0000000000000032 times=0...
TIMESTAMP decompiling 4004C0 size=000000000000003A times=0...
TIMESTAMP decompiling 400550 size=000000000000000F times=0...
TIMESTAMP decompiling 400560 size=000000000000000E times=0...
TIMESTAMP decompiling 400570 size=0000000000000079 times=0...
TIMESTAMP decompiling 4005F0 size=0000000000000030 times=0...
TIMESTAMP decompiling 400620 size=0000000000000051 times=0...
The decompiler assumes that the segment '.rodata' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 400680 size=0000000000000029 times=0...
TIMESTAMP decompiling 4006B0 size=0000000000000015 times=0...
TIMESTAMP decompiling 4006D0 size=000000000000000D times=0...
TIMESTAMP decompiling 4006E0 size=0000000000000015 times=0...
TIMESTAMP decompiling 400700 size=000000000000000D times=0...
TIMESTAMP decompiling 400710 size=000000000000000D times=0...
TIMESTAMP decompiling 400720 size=000000000000000D times=0...
TIMESTAMP decompiling 400730 size=00000000000000D2 times=0...
TIMESTAMP decompiling 400810 size=00000000000000D2 times=0...
TIMESTAMP decompiling 4008F0 size=000000000000009B times=0...
TIMESTAMP decompiling 400A04 size=0000000000000009 times=0...
TIMESTAMP decompiling 400520 size=0000000000000026 times=0...
TIMESTAMP decompiling 4004C0 size=000000000000003A times=1;usedcpu 00:00:00 ...__int64(void)
TIMESTAMP decompiling 400520 size=0000000000000026 times=1;usedcpu 00:00:00 ...__int64 __fastcall()
TIMESTAMP decompiling 400990 size=0000000000000065 times=0...
TIMESTAMP decompiling 400520 size=0000000000000026 times=2;usedcpu 00:00:00 ...__int64 __fastcall(_QWORD, _QWORD, _QWORD)
TIMESTAMP decompiling 400990 size=0000000000000065 times=1;usedcpu 00:00:00 ...void __fastcall(unsigned int a1, __int64 a2, __int64 a3)
TIMESTAMP decompiling 400450 size=000000000000002B times=0...
TIMESTAMP decompiling 400500 size=000000000000001C times=0...
TIMESTAMP decompiling 400480 size=0000000000000032 times=1;usedcpu 00:00:00 ...__int64(void)
TIMESTAMP decompiling 400500 size=000000000000001C times=1;usedcpu 00:00:00 ...__int64 __fastcall()
TIMESTAMP The application has been completely decompiled.
Unloading IDP module IDADIR/procs/pc64.so...
