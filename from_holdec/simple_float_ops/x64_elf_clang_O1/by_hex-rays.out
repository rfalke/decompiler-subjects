Possible file format: ELF64 for x86-64 (Executable) (IDADIR/loaders/elf64.so)

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
    65536     8 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
   851968            total memory allocated

Loading file 'SUBJECTS/from_holdec/simple_float_ops/x64_elf_clang_O1/subject.exe' into database...
Detected file format: ELF64 for x86-64 (Executable)
Loading processor module IDADIR/procs/pc64.so for metapc...Initializing processor module metapc...OK
Autoanalysis subsystem has been initialized.
  0. Creating a new segment  (0000000000400000-0000000000400C64) ... ... OK
  1. Creating a new segment  (0000000000600E08-0000000000601078) ... ... OK
Assuming __fastcall calling convention by default
Type library 'gnulnx_x64' loaded. Applying types...
Types applied to 0 names.
  2. Creating a new segment  (00000000004003C8-00000000004003DF) ... ... OK
  3. Creating a new segment  (00000000004003DF-0000000000400C64) ... ... OK
  4. Creating a new segment  (00000000004003E0-0000000000400400) ... ... OK
  5. Creating a new segment  (0000000000400400-0000000000400C64) ... ... OK
  6. Creating a new segment  (0000000000400400-00000000004008F2) ... ... OK
     Deleting segment        (00000000004008F2-0000000000400C64) ...
  6. Creating a new segment  (00000000004008F2-0000000000400C64) ... ... OK
  7. Creating a new segment  (00000000004008F4-00000000004008FD) ... ... OK
  8. Creating a new segment  (00000000004008FD-0000000000400C64) ... ... OK
  9. Creating a new segment  (0000000000400900-000000000040095B) ... ... OK
 10. Creating a new segment  (000000000040095B-0000000000400C64) ... ... OK
 11. Creating a new segment  (000000000040095C-0000000000400A08) ... ... OK
 12. Creating a new segment  (0000000000400A08-0000000000400C64) ... ... OK
     Deleting segment        (0000000000400A08-0000000000400C64) ...
 12. Creating a new segment  (0000000000400A08-0000000000400C64) ... ... OK
 13. Creating a new segment  (0000000000600E08-0000000000600E10) ... ... OK
     Deleting segment        (0000000000600E10-0000000000601078) ...
 13. Creating a new segment  (0000000000600E10-0000000000601078) ... ... OK
 14. Creating a new segment  (0000000000600E10-0000000000600E18) ... ... OK
     Deleting segment        (0000000000600E18-0000000000601078) ...
 14. Creating a new segment  (0000000000600E18-0000000000601078) ... ... OK
 15. Creating a new segment  (0000000000600E18-0000000000600E20) ... ... OK
     Deleting segment        (0000000000600E20-0000000000601078) ...
 15. Creating a new segment  (0000000000600E20-0000000000601078) ... ... OK
 16. Creating a new segment  (0000000000600FF0-0000000000601000) ... ... OK
 17. Creating a new segment  (0000000000601000-0000000000601078) ... ... OK
 18. Creating a new segment  (0000000000601000-0000000000601020) ... ... OK
     Deleting segment        (0000000000601020-0000000000601078) ...
 18. Creating a new segment  (0000000000601020-0000000000601078) ... ... OK
 19. Creating a new segment  (0000000000601020-0000000000601070) ... ... OK
     Deleting segment        (0000000000601070-0000000000601078) ...
 19. Creating a new segment  (0000000000601070-0000000000601078) ... ... OK
     Deleting segment        (0000000000601070-0000000000601078) ...
 19. Creating a new segment  (0000000000601070-0000000000601078) ... ... OK
 20. Creating a new segment  (0000000000601078-0000000000601079) ... ... OK
 21. Creating a new segment  (0000000000601080-0000000000601098) ... ... OK
Processing relocations...
DWARF: File "SUBJECTS/from_holdec/simple_float_ops/x64_elf_clang_O1/subject.exe" contains DWARF information.
DWARF: Functions: 16 symbols applied
DWARF: Globals: 8 symbols applied
Marking typical code sequences...
Flushing buffers, please wait...ok
File 'SUBJECTS/from_holdec/simple_float_ops/x64_elf_clang_O1/subject.exe' has been successfully loaded into the database.
Hex-Rays Decompiler plugin has been loaded (v7.5.0.201028)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.
  Please check the Edit/Plugins menu for more informaton.
IDAPython Hex-Rays bindings initialized.
IDA is analysing the input file...
You may start to explore the input file right now.
Propagating type information...
Function argument information has been propagated
lumina: applied metadata to 5 functions.
The initial autoanalysis has been finished.
Flushing buffers, please wait...ok
TIMESTAMP decompiling 4003C8 size=0000000000000017 times=0...
The decompiler assumes that the segment '.got' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 4003E0 size=000000000000000C times=0...
The decompiler assumes that the segment '.got.plt' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 400430 size=0000000000000032 times=0...
TIMESTAMP decompiling 400470 size=000000000000003A times=0...
TIMESTAMP decompiling 400500 size=000000000000000C times=0...
TIMESTAMP decompiling 400510 size=0000000000000010 times=0...
TIMESTAMP decompiling 400580 size=0000000000000030 times=0...
TIMESTAMP decompiling 400600 size=0000000000000025 times=0...
TIMESTAMP decompiling 400630 size=0000000000000015 times=0...
TIMESTAMP decompiling 400650 size=000000000000000D times=0...
TIMESTAMP decompiling 400660 size=0000000000000015 times=0...
TIMESTAMP decompiling 400680 size=000000000000000D times=0...
TIMESTAMP decompiling 400690 size=000000000000000D times=0...
TIMESTAMP decompiling 4006A0 size=000000000000000D times=0...
TIMESTAMP decompiling 400830 size=0000000000000047 times=0...
TIMESTAMP decompiling 4008F4 size=0000000000000009 times=0...
TIMESTAMP decompiling 4004D0 size=0000000000000026 times=0...
TIMESTAMP decompiling 400470 size=000000000000003A times=1;usedcpu 00:00:00 ...__int64(void)
TIMESTAMP decompiling 4004D0 size=0000000000000026 times=1;usedcpu 00:00:00 ...__int64 __fastcall()
TIMESTAMP decompiling 400880 size=0000000000000065 times=0...
TIMESTAMP decompiling 4004D0 size=0000000000000026 times=2;usedcpu 00:00:00 ...__int64 __fastcall(_QWORD, _QWORD, _QWORD)
TIMESTAMP decompiling 400880 size=0000000000000065 times=1;usedcpu 00:00:00 ...void __fastcall(unsigned int a1, __int64 a2, __int64 a3)
TIMESTAMP decompiling 400400 size=000000000000002B times=0...
TIMESTAMP decompiling 4004B0 size=000000000000001C times=0...
TIMESTAMP decompiling 400520 size=0000000000000056 times=0...
TIMESTAMP decompiling 4005B0 size=0000000000000049 times=0...
TIMESTAMP decompiling 4006B0 size=000000000000008B times=0...
The decompiler assumes that the segment '.rodata' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 400740 size=000000000000008E times=0...
TIMESTAMP decompiling 4007D0 size=000000000000005E times=0...
TIMESTAMP The application has been completely decompiled.
Unloading IDP module IDADIR/procs/pc64.so...
