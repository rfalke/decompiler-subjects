Running phase: Unpacking ( some time )
No matching plugins found for 'GCC 4.6.3'
Running phase: Initialization ( some time )
Running phase: Providers initialization ( some time )
Running phase: Input binary to LLVM IR decoding ( some time )
Running phase: LLVM ( some time )
Running phase: x86 address spaces optimization ( some time )
Running phase: x87 fpu register analysis ( some time )
Running phase: Main function identification optimization ( some time )
Running phase: Libgcc idioms optimization ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Conditional branch optimization ( some time )
Running phase: Syscalls optimization ( some time )
Running phase: Stack optimization ( some time )
Running phase: Constants optimization ( some time )
Running phase: Function parameters and returns optimization ( some time )
Running phase: LLVM instruction optimization using RDA ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Simple types recovery optimization ( some time )
Running phase: Disassembly generation ( some time )
Running phase: Assembly mapping instruction removal ( some time )
Running phase: C++ class hierarchy optimization ( some time )
Running phase: Selected functions optimization ( some time )
Running phase: Unreachable functions optimization ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Make all registers local ( some time )
Running phase: Value protection optimization ( some time )
Running phase: LLVM ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Simple types recovery optimization ( some time )
Running phase: Stack pointer operations optimization ( some time )
Running phase: Instruction idioms optimization ( some time )
Running phase: LLVM ( some time )
Running phase: LLVM instruction optimization ( some time )
Running phase: Instruction idioms optimization ( some time )
Running phase: Phi removal ( some time )
Running phase: LLVM ( some time )
Running phase: Value protection optimization ( some time )
Running phase: Generate the current LLVM IR ( some time )
Running phase: Generate the current bitcode ( some time )
Running phase: LLVM IR -> HLL ( some time )
Running phase: initialization ( some time )
 -> loading the input config ( some time )
 -> creating the used HLL writer [c] ( some time )
 -> creating the used alias analysis [simple] ( some time )
 -> creating the used call info obtainer [optim] ( some time )
 -> creating the used evaluator of arithmetical expressions [c] ( some time )
 -> creating the used variable names generator [fruit] ( some time )
 -> creating the used variable renamer [readable] ( some time )
 -> creating the used semantics [libc,gcc-general,win-api] ( some time )
Running phase: conversion of LLVM IR into BIR ( some time )
 -> converting global variables ( some time )
 -> converting function function_80488bc ( some time )
 -> converting function function_80488e4 ( some time )
 -> converting function function_80488f4 ( some time )
 -> converting function function_8048904 ( some time )
 -> converting function function_8048914 ( some time )
 -> converting function function_8048924 ( some time )
 -> converting function function_8048934 ( some time )
 -> converting function function_8048944 ( some time )
 -> converting function function_8048954 ( some time )
 -> converting function function_8048964 ( some time )
 -> converting function function_8048974 ( some time )
 -> converting function function_8048984 ( some time )
 -> converting function function_8048994 ( some time )
 -> converting function function_80489a4 ( some time )
 -> converting function function_80489b4 ( some time )
 -> converting function function_80489c4 ( some time )
 -> converting function function_80489d4 ( some time )
 -> converting function function_80489e4 ( some time )
 -> converting function function_80489f4 ( some time )
 -> converting function function_8048a04 ( some time )
 -> converting function function_8048a14 ( some time )
 -> converting function function_8048a24 ( some time )
 -> converting function function_8048a34 ( some time )
 -> converting function function_8048a44 ( some time )
 -> converting function function_8048a54 ( some time )
 -> converting function function_8048a64 ( some time )
 -> converting function function_8048a74 ( some time )
 -> converting function function_8048a84 ( some time )
 -> converting function function_8048a94 ( some time )
 -> converting function function_8048aa4 ( some time )
 -> converting function entry_point ( some time )
 -> converting function function_8048ae4 ( some time )
 -> converting function function_8048b08 ( some time )
 -> converting function function_8048b3c ( some time )
 -> converting function function_8048b68 ( some time )
 -> converting function function_8048c4a ( some time )
 -> converting function function_8048d64 ( some time )
 -> converting function function_8048d68 ( some time )
 -> converting function close_stdout ( some time )
 -> converting function function_8048e5f ( some time )
 -> converting function function_8048e70 ( some time )
 -> converting function function_8048eea ( some time )
 -> converting function function_8048f0d ( some time )
 -> converting function function_8048f36 ( some time )
 -> converting function function_8048fa3 ( some time )
 -> converting function function_8048ff6 ( some time )
 -> converting function function_80495c7 ( some time )
 -> converting function function_80495f4 ( some time )
 -> converting function function_8049600 ( some time )
 -> converting function function_8049672 ( some time )
 -> converting function function_80496c3 ( some time )
 -> converting function function_8049721 ( some time )
 -> converting function function_80498ae ( some time )
 -> converting function function_80498da ( some time )
 -> converting function function_8049905 ( some time )
 -> converting function function_804995f ( some time )
 -> converting function function_804998f ( some time )
 -> converting function function_80499be ( some time )
 -> converting function function_80499f0 ( some time )
 -> converting function function_8049a8b ( some time )
 -> converting function function_8049ac0 ( some time )
 -> converting function function_8049ccd ( some time )
 -> converting function function_8049d10 ( some time )
 -> converting function function_8049d82 ( some time )
 -> converting function function_8049dc5 ( some time )
 -> converting function function_8049df5 ( some time )
 -> converting function function_8049e3f ( some time )
 -> converting function function_8049e75 ( some time )
 -> converting function function_8049ee2 ( some time )
 -> converting function function_8049f27 ( some time )
 -> converting function function_8049f60 ( some time )
 -> converting function function_8049fa5 ( some time )
 -> converting function function_8049fe0 ( some time )
 -> converting function function_804a008 ( some time )
 -> converting function function_804a05c ( some time )
 -> converting function function_804a0a0 ( some time )
 -> converting function function_804a0d0 ( some time )
 -> converting function function_804a0f4 ( some time )
Running phase: removing functions from standard libraries ( some time )
Running phase: removing code that is not reachable in a CFG ( some time )
Running phase: signed/unsigned types fixing ( some time )
Running phase: converting LLVM intrinsic functions to standard functions ( some time )
Running phase: obtaining debug information ( some time )
Running phase: alias analysis [simple] ( some time )
Running phase: optimizations ( some time )
 -> running GotoStmtOptimizer ( some time )
 -> running RemoveUselessCastsOptimizer ( some time )
 -> running UnusedGlobalVarOptimizer ( some time )
 -> running DeadLocalAssignOptimizer ( some time )
 -> running SimpleCopyPropagationOptimizer ( some time )
 -> running CopyPropagationOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running IfStructureOptimizer ( some time )
 -> running LoopLastContinueOptimizer ( some time )
 -> running PreWhileTrueLoopConvOptimizer ( some time )
 -> running WhileTrueToForLoopOptimizer ( some time )
 -> running WhileTrueToWhileCondOptimizer ( some time )
 -> running IfBeforeLoopOptimizer ( some time )
 -> running LLVMIntrinsicsOptimizer ( some time )
 -> running VoidReturnOptimizer ( some time )
 -> running BreakContinueReturnOptimizer ( some time )
 -> running BitShiftOptimizer ( some time )
 -> running DerefAddressOptimizer ( some time )
 -> running EmptyArrayToStringOptimizer ( some time )
 -> running BitOpToLogOpOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running UnusedGlobalVarOptimizer ( some time )
 -> running DeadLocalAssignOptimizer ( some time )
 -> running SimpleCopyPropagationOptimizer ( some time )
 -> running CopyPropagationOptimizer ( some time )
 -> running SelfAssignOptimizer ( some time )
 -> running VarDefForLoopOptimizer ( some time )
 -> running VarDefStmtOptimizer ( some time )
 -> running EmptyStmtOptimizer ( some time )
 -> running GotoStmtOptimizer ( some time )
 -> running SimplifyArithmExprOptimizer ( some time )
 -> running DeadCodeOptimizer ( some time )
 -> running DerefToArrayIndexOptimizer ( some time )
 -> running IfToSwitchOptimizer ( some time )
 -> running CCastOptimizer ( some time )
 -> running CArrayArgOptimizer ( some time )
Running phase: variable renaming [readable] ( some time )
Running phase: converting constants to symbolic names ( some time )
Running phase: module validation ( some time )
 -> running BreakOutsideLoopValidator ( some time )
 -> running NoGlobalVarDefValidator ( some time )
 -> running ReturnValidator ( some time )
Running phase: emission of the target code [c] ( some time )
Running phase: finalization ( some time )
Running phase: cleanup ( some time )
