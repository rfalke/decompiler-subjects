[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Finding and parsing C++ vtables (avrr)[[x] Finding and parsing C++ vtables (avrr)
[ ] Finding xrefs in noncode section (e anal.in=io.maps.x)[[x] Finding xrefs in noncode section (e anal.in=io.maps.x)
[ ] Analyze value pointers (aav)[[x] Analyze value pointers (aav)
[ ] ... from 0x21bb0 to 0x21bd0[[x] ... from 0x21bb0 to 0x21bd0
[ ] 0x00021bb0-0x00021bd0 in 0x21bb0-0x21bd0 (aav)[[x] 0x00021bb0-0x00021bd0 in 0x21bb0-0x21bd0 (aav)
[ ] 0x00021bb0-0x00021bd0 in 0x218bc-0x21bb0 (aav)[[x] 0x00021bb0-0x00021bd0 in 0x218bc-0x21bb0 (aav)
[ ] 0x00021bb0-0x00021bd0 in 0x10000-0x118bb (aav)[[x] 0x00021bb0-0x00021bd0 in 0x10000-0x118bb (aav)
[ ] ... from 0x218bc to 0x21bb0[[x] ... from 0x218bc to 0x21bb0
[ ] 0x000218bc-0x00021bb0 in 0x21bb0-0x21bd0 (aav)[[x] 0x000218bc-0x00021bb0 in 0x21bb0-0x21bd0 (aav)
[ ] 0x000218bc-0x00021bb0 in 0x218bc-0x21bb0 (aav)[[x] 0x000218bc-0x00021bb0 in 0x218bc-0x21bb0 (aav)
[ ] 0x000218bc-0x00021bb0 in 0x10000-0x118bb (aav)[[x] 0x000218bc-0x00021bb0 in 0x10000-0x118bb (aav)
[ ] ... from 0x10000 to 0x118bb[[x] ... from 0x10000 to 0x118bb
[ ] 0x00010000-0x000118bb in 0x21bb0-0x21bd0 (aav)[[x] 0x00010000-0x000118bb in 0x21bb0-0x21bd0 (aav)
[ ] 0x00010000-0x000118bb in 0x218bc-0x21bb0 (aav)[[x] 0x00010000-0x000118bb in 0x218bc-0x21bb0 (aav)
[ ] 0x00010000-0x000118bb in 0x10000-0x118bb (aav)[[x] 0x00010000-0x000118bb in 0x10000-0x118bb (aav)
[ ] Emulate functions to find computed references (aaef)[Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
Warning: No SN reg alias for current architecture.
[x] Emulate functions to find computed references (aaef)
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information (aanr)[[x] Propagate noreturn information (aanr)
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
 -- Put some sugar before the release, attracts the bugs and makes it easier to squash them
[2K[0x00010a6c]> [0x00010a6c]> [2K[0x00010a6c]> p[0x00010a6c]> p[2K[0x00010a6c]> pd[0x00010a6c]> pd[2K[0x00010a6c]> pdd[0x00010a6c]> pdd[2K[0x00010a6c]> pdd [0x00010a6c]> pdd [2K[0x00010a6c]> pdd @[0x00010a6c]> pdd @[2K[0x00010a6c]> pdd @@[0x00010a6c]> pdd @@[2K[0x00010a6c]> pdd @@f[0x00010a6c]> pdd @@f[2K[0x00010a6c]> pdd @@f [0x00010a6c]> pdd @@f [2K[0x00010a6c]> pdd @@f >[0x00010a6c]> pdd @@f >[2K[0x00010a6c]> pdd @@f >r[0x00010a6c]> pdd @@f >r[2K[0x00010a6c]> pdd @@f >r2[0x00010a6c]> pdd @@f >r2[2K[0x00010a6c]> pdd @@f >r2d[0x00010a6c]> pdd @@f >r2d[2K[0x00010a6c]> pdd @@f >r2de[0x00010a6c]> pdd @@f >r2de[2K[0x00010a6c]> pdd @@f >r2dec[0x00010a6c]> pdd @@f >r2dec[2K[0x00010a6c]> pdd @@f >r2dec.[0x00010a6c]> pdd @@f >r2dec.[2K[0x00010a6c]> pdd @@f >r2dec.c[0x00010a6c]> pdd @@f >r2dec.c[0x00010a6c]> pdd @@f >r2dec.c
[2K[0x00010a6c]> [0x00010a6c]> 
