Possible file format: MS-DOS executable (EXE) (IDADIR/loaders/dos64.so)
Possible file format: Portable executable for AMD64 (PE) (IDADIR/loaders/pe64.so)

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
   262144    32 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
  1048576            total memory allocated

Loading file 'SUBJECTS/from_snowman/other-030_hello/x64_elf/subject.exe' into database...
Detected file format: Portable executable for AMD64 (PE)
Loading processor module IDADIR/procs/pc64.so for metapc...Initializing processor module metapc...OK
Autoanalysis subsystem has been initialized.
  0. Creating a new segment  (0000000000401000-0000000000403000) ... ... OK
  1. Creating a new segment  (0000000000403000-0000000000404000) ... ... OK
  2. Creating a new segment  (0000000000404000-0000000000405000) ... ... OK
  3. Creating a new segment  (0000000000405000-0000000000406000) ... ... OK
  4. Creating a new segment  (0000000000406000-0000000000407000) ... ... OK
  5. Creating a new segment  (0000000000407000-0000000000408000) ... ... OK
  6. Creating a new segment  (0000000000408000-0000000000409000) ... ... OK
  7. Creating a new segment  (0000000000409000-000000000040A000) ... ... OK
  8. Creating a new segment  (000000000040A000-000000000040B000) ... ... OK
Reading imports directory...
Reading exception directory (.pdata)...
DWARF: File "SUBJECTS/from_snowman/other-030_hello/x64_elf/subject.exe" contains DWARF information.
Assuming __fastcall calling convention by default
DWARF: Functions: 10 symbols applied
DWARF: Globals: 13 symbols applied
Loading COFF symbols...
main() function at 4014F0, named "main"
Type library 'mssdk64_win7' loaded. Applying types...
Types applied to 98 names.
Plan  FLIRT signature: SEH for vc64 7-14
Marking typical code sequences...
Flushing buffers, please wait...ok
File 'SUBJECTS/from_snowman/other-030_hello/x64_elf/subject.exe' has been successfully loaded into the database.
Hex-Rays Decompiler plugin has been loaded (v7.5.0.201028)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.
  Please check the Edit/Plugins menu for more informaton.
IDAPython Hex-Rays bindings initialized.
IDA is analysing the input file...
You may start to explore the input file right now.
Using FLIRT signature: SEH for vc64 7-14
Propagating type information...
Function argument information has been propagated
lumina: applied metadata to 8 functions.
The initial autoanalysis has been finished.
Flushing buffers, please wait...ok
TIMESTAMP decompiling 401010 size=0000000000000048 times=0...
TIMESTAMP decompiling 40152A size=000000000000001B times=0...
TIMESTAMP decompiling 401670 size=0000000000000003 times=0...
TIMESTAMP decompiling 401680 size=000000000000000A times=0...
The decompiler assumes that the segment '.idata' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 401690 size=0000000000000004 times=0...
TIMESTAMP decompiling 4016A0 size=0000000000000004 times=0...
TIMESTAMP decompiling 401C40 size=000000000000003F times=0...
TIMESTAMP decompiling 401C80 size=000000000000000C times=0...
TIMESTAMP decompiling 401C90 size=00000000000000DC times=0...
The decompiler assumes that the segment '.rdata' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 401D70 size=0000000000000003 times=0...
TIMESTAMP decompiling 401D80 size=0000000000000061 times=0...
TIMESTAMP decompiling 402270 size=000000000000002B times=0...
TIMESTAMP decompiling 4022A0 size=0000000000000050 times=0...
TIMESTAMP decompiling 402660 size=0000000000000003 times=0...
TIMESTAMP decompiling 402670 size=0000000000000035 times=0...
TIMESTAMP decompiling 402730 size=00000000000000C8 times=0...
TIMESTAMP decompiling 402800 size=00000000000000FB times=0...
TIMESTAMP decompiling 402900 size=000000000000006D times=0...
TIMESTAMP decompiling 402970 size=000000000000007F times=0...
TIMESTAMP decompiling 4029F0 size=000000000000009C times=0...
TIMESTAMP decompiling 401060 size=000000000000011F times=0...
TIMESTAMP decompiling 401D70 size=0000000000000003 times=1;usedcpu 00:00:00 ...__int64(void)
TIMESTAMP decompiling 401060 size=000000000000011F times=1;usedcpu 00:00:00 ...int __cdecl()
TIMESTAMP decompiling 4014B0 size=0000000000000228 times=0...
TIMESTAMP decompiling 4016B0 size=00000000000000AA times=0...
TIMESTAMP decompiling 401760 size=0000000000000014 times=0...
TIMESTAMP decompiling 4026B0 size=0000000000000060 times=0...
The decompiler assumes that the segment '.text' is read-only because of its NAME.
All data references to the segment will be replaced by constant values.
This may lead to drastic changes in the decompiler output.
If the segment is not read-only, please change the segment NAME.

In general, the decompiler checks the segment permissions, class, and name
to determine if it is read-only.
 -> OK
TIMESTAMP decompiling 402710 size=000000000000001C times=0...
TIMESTAMP decompiling 4014F0 size=000000000000003A times=0...
TIMESTAMP decompiling 401545 size=000000000000003C times=0...
TIMESTAMP decompiling 401581 size=000000000000001E times=0...
TIMESTAMP decompiling 402A90 size=0000000000000097 times=0...
TIMESTAMP decompiling 4015D0 size=000000000000002F times=0...
TIMESTAMP decompiling 401600 size=0000000000000069 times=0...
TIMESTAMP decompiling 401780 size=0000000000000198 times=0...
TIMESTAMP decompiling 4022F0 size=000000000000009D times=0...
TIMESTAMP decompiling 402400 size=0000000000000073 times=0...
TIMESTAMP decompiling 402480 size=0000000000000027 times=0...
TIMESTAMP decompiling 401920 size=0000000000000103 times=0...
TIMESTAMP decompiling 402480 size=0000000000000027 times=1;usedcpu 00:00:00 ...__int64(void)
TIMESTAMP decompiling 401920 size=0000000000000103 times=1;usedcpu 00:00:00 ...__int64 __fastcall()
TIMESTAMP decompiling 402390 size=0000000000000038 times=0...
TIMESTAMP decompiling 401DF0 size=000000000000016A times=0...
TIMESTAMP decompiling 4023D0 size=0000000000000030 times=0...
TIMESTAMP decompiling 401F60 size=0000000000000304 times=0...
TIMESTAMP decompiling 4023D0 size=0000000000000030 times=1;usedcpu 00:00:00 ...__int64(void)
TIMESTAMP decompiling 401F60 size=0000000000000304 times=1;usedcpu 00:00:00 ...void()
TIMESTAMP decompiling 4024B0 size=000000000000004C times=0...
TIMESTAMP decompiling 402500 size=000000000000008E times=0...
TIMESTAMP decompiling 402590 size=00000000000000C9 times=0...
TIMESTAMP The application has been completely decompiled.
Unloading IDP module IDADIR/procs/pc64.so...
