=== Using options:--aggressive-branch-removal
Entry: 0
Sections:
                   sh_type: SHT_NULL     sh_flags:      sh_addr: 00000000 sh_offset: 00000000 sh_size: 00000000 sh_link:                    sh_info:                    sh_addralign: 00000000 sh_entsize: 00000000
.text              sh_type: SHT_PROGBITS sh_flags: xa   sh_addr: 00000000 sh_offset: 00000034 sh_size: 00000026 sh_link:                    sh_info:                    sh_addralign: 00000001 sh_entsize: 00000000
.data              sh_type: SHT_PROGBITS sh_flags:  aw  sh_addr: 00000000 sh_offset: 0000005A sh_size: 00000000 sh_link:                    sh_info:                    sh_addralign: 00000001 sh_entsize: 00000000
.bss               sh_type: SHT_NOBITS   sh_flags:  aw  sh_addr: 00000000 sh_offset: 0000005A sh_size: 00000000 sh_link:                    sh_info:                    sh_addralign: 00000001 sh_entsize: 00000000
.comment           sh_type: SHT_PROGBITS sh_flags:      sh_addr: 00000000 sh_offset: 0000005A sh_size: 0000001E sh_link:                    sh_info:                    sh_addralign: 00000001 sh_entsize: 00000001
.note.GNU-stack    sh_type: SHT_PROGBITS sh_flags:      sh_addr: 00000000 sh_offset: 00000078 sh_size: 00000000 sh_link:                    sh_info:                    sh_addralign: 00000001 sh_entsize: 00000000
.eh_frame          sh_type: SHT_PROGBITS sh_flags:  a   sh_addr: 00000000 sh_offset: 00000078 sh_size: 00000038 sh_link:                    sh_info:                    sh_addralign: 00000004 sh_entsize: 00000000
.rel.eh_frame      sh_type: SHT_REL      sh_flags:      sh_addr: 00000000 sh_offset: 00000360 sh_size: 00000008 sh_link: .symtab            sh_info: .eh_frame          sh_addralign: 00000004 sh_entsize: 00000008
.shstrtab          sh_type: SHT_STRTAB   sh_flags:      sh_addr: 00000000 sh_offset: 000000B0 sh_size: 00000053 sh_link:                    sh_info:                    sh_addralign: 00000001 sh_entsize: 00000000
.symtab            sh_type: SHT_SYMTAB   sh_flags:      sh_addr: 00000000 sh_offset: 000002BC sh_size: 00000090 sh_link: .strtab            sh_info:                    sh_addralign: 00000004 sh_entsize: 00000010
.strtab            sh_type: SHT_STRTAB   sh_flags:      sh_addr: 00000000 sh_offset: 0000034C sh_size: 00000012 sh_link:                    sh_info:                    sh_addralign: 00000001 sh_entsize: 00000000

Program headers:
Base address: 00000000

Dependencies

Relocations
Error: An error occurred during decompilation.
    The address 00001020 is invalid.
       at Reko.Core.Program.CreateImageReader(IProcessorArchitecture arch, Address addr)
   at Reko.ImageLoaders.Elf.Relocators.x86Relocator.RelocateEntry(Program program, ElfSymbol sym, ElfSection referringSection, ElfRelocation rela)
   at Reko.ImageLoaders.Elf.Relocators.ElfRelocator32.Relocate(Program program)
   at Reko.ImageLoaders.Elf.Relocators.x86Relocator.Relocate(Program program)
   at Reko.ImageLoaders.Elf.ElfLoader.Relocate(Program program, Address addrLoad)
   at Reko.ImageLoaders.Elf.ElfImageLoader.Relocate(Program program, Address addrLoad)
   at Reko.Loading.Loader.LoadExecutable(String filename, Byte[] image, String loader, Address addrLoad)
   at Reko.Decompiler.Load(String fileName, String loaderName, Address addrLoad)
   at Reko.CmdLine.CmdLineDriver.Decompile(Dictionary`2 pArgs)
